!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	455;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	461;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	486;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	489;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	492;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	442;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	452;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	460;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	463;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	471;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	474;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	477;"	d	file:
C3iroboticsLidar	src/include/C3iroboticsLidar.h	/^		class C3iroboticsLidar$/;"	c	namespace:everest::hwdrivers
C3iroboticsLidar	src/include/C3iroboticsLidar.h	/^                C3iroboticsLidar();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
C3iroboticsLidar	src/src/C3iroboticsLidar.cpp	/^C3iroboticsLidar::C3iroboticsLidar()$/;"	f	class:C3iroboticsLidar	signature:()
C3iroboticsLidar::C3iroboticsLidar	src/src/C3iroboticsLidar.cpp	/^C3iroboticsLidar::C3iroboticsLidar()$/;"	f	class:C3iroboticsLidar	signature:()
C3iroboticsLidar::analysisHealthInfo	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisHealthInfo(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
C3iroboticsLidar::analysisLidarSpeed	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisLidarSpeed(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
C3iroboticsLidar::analysisNewToothScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisNewToothScan(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
C3iroboticsLidar::analysisPacket	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisPacket(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
C3iroboticsLidar::analysisToothScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisToothScan(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
C3iroboticsLidar::combineScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::combineScan(TToothScan &tooth_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan)
C3iroboticsLidar::getScanData	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::getScanData()$/;"	f	class:C3iroboticsLidar	signature:()
C3iroboticsLidar::grabFirstScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::grabFirstScan(TToothScan &tooth_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan)
C3iroboticsLidar::initilize	src/src/C3iroboticsLidar.cpp	/^bool C3iroboticsLidar::initilize(CDeviceConnection *device_connect)$/;"	f	class:C3iroboticsLidar	signature:(CDeviceConnection *device_connect)
C3iroboticsLidar::isFirstScan	src/src/C3iroboticsLidar.cpp	/^bool C3iroboticsLidar::isFirstScan(TToothScan &tooth_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan)
C3iroboticsLidar::resetScanGrab	src/src/C3iroboticsLidar.cpp	/^void C3iroboticsLidar::resetScanGrab()$/;"	f	class:C3iroboticsLidar	signature:()
C3iroboticsLidar::toothScan2LidarScan	src/src/C3iroboticsLidar.cpp	/^void C3iroboticsLidar::toothScan2LidarScan(TToothScan &tooth_scan, TLidarScan &lidar_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan, TLidarScan &lidar_scan)
C3iroboticsLidar::~C3iroboticsLidar	src/src/C3iroboticsLidar.cpp	/^C3iroboticsLidar::~C3iroboticsLidar()$/;"	f	class:C3iroboticsLidar	signature:()
CArcTime	src/include/CArcTime.h	/^              CArcTime() { setToNow(); }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:()
CArcTime	src/include/CArcTime.h	/^              CArcTime(const CArcTime &other) :$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime &other)
CArcTime	src/include/CArcTime.h	/^        class CArcTime$/;"	c	namespace:everest::hwdrivers
CArcTime::setToNow	src/src/CArcTime.cpp	/^void CArcTime::setToNow(void)$/;"	f	class:CArcTime	signature:(void)
CCountDown	src/include/CCountDown.h	/^                CCountDown();$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:()
CCountDown	src/include/CCountDown.h	/^                CCountDown(double time_ms);$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:(double time_ms)
CCountDown	src/include/CCountDown.h	/^        class CCountDown$/;"	c	namespace:everest::hwdrivers
CCountDown	src/src/CCountDown.cpp	/^CCountDown::CCountDown()$/;"	f	class:CCountDown	signature:()
CCountDown	src/src/CCountDown.cpp	/^CCountDown::CCountDown(double time_ms)$/;"	f	class:CCountDown	signature:(double time_ms)
CCountDown::CCountDown	src/src/CCountDown.cpp	/^CCountDown::CCountDown()$/;"	f	class:CCountDown	signature:()
CCountDown::CCountDown	src/src/CCountDown.cpp	/^CCountDown::CCountDown(double time_ms)$/;"	f	class:CCountDown	signature:(double time_ms)
CCountDown::getLeftTime	src/src/CCountDown.cpp	/^double CCountDown::getLeftTime() const$/;"	f	class:CCountDown	signature:() const
CCountDown::isEnd	src/src/CCountDown.cpp	/^bool CCountDown::isEnd() const$/;"	f	class:CCountDown	signature:() const
CCountDown::setTime	src/src/CCountDown.cpp	/^void CCountDown::setTime(double time_ms)$/;"	f	class:CCountDown	signature:(double time_ms)
CCountDown::~CCountDown	src/src/CCountDown.cpp	/^CCountDown::~CCountDown()$/;"	f	class:CCountDown	signature:()
CDeviceConnection	src/include/CDeviceConnection.h	/^			  CDeviceConnection();$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:()
CDeviceConnection	src/include/CDeviceConnection.h	/^		class CDeviceConnection$/;"	c	namespace:everest::hwdrivers
CDeviceConnection	src/src/CDeviceConnection.cpp	/^CDeviceConnection::CDeviceConnection()$/;"	f	class:CDeviceConnection	signature:()
CDeviceConnection::CDeviceConnection	src/src/CDeviceConnection.cpp	/^CDeviceConnection::CDeviceConnection()$/;"	f	class:CDeviceConnection	signature:()
CDeviceConnection::buildStrMap	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::buildStrMap(void)$/;"	f	class:CDeviceConnection	signature:(void)
CDeviceConnection::getDeviceName	src/src/CDeviceConnection.cpp	/^const char *CDeviceConnection::getDeviceName(void) const$/;"	f	class:CDeviceConnection	signature:(void) const
CDeviceConnection::getPortName	src/src/CDeviceConnection.cpp	/^const char *CDeviceConnection::getPortName(void) const$/;"	f	class:CDeviceConnection	signature:(void) const
CDeviceConnection::getPortType	src/src/CDeviceConnection.cpp	/^const char *CDeviceConnection::getPortType(void) const$/;"	f	class:CDeviceConnection	signature:(void) const
CDeviceConnection::getStatusMessage	src/src/CDeviceConnection.cpp	/^const char * CDeviceConnection::getStatusMessage(int messageNumber) const$/;"	f	class:CDeviceConnection	signature:(int messageNumber) const
CDeviceConnection::m_str_map	src/src/CDeviceConnection.cpp	/^CStrMap CDeviceConnection::m_str_map;$/;"	m	class:CDeviceConnection	file:
CDeviceConnection::setDeviceName	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::setDeviceName(const char *device_name)$/;"	f	class:CDeviceConnection	signature:(const char *device_name)
CDeviceConnection::setPortName	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::setPortName(const char *portName)$/;"	f	class:CDeviceConnection	signature:(const char *portName)
CDeviceConnection::setPortType	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::setPortType(const char *portType)$/;"	f	class:CDeviceConnection	signature:(const char *portType)
CDeviceConnection::~CDeviceConnection	src/src/CDeviceConnection.cpp	/^CDeviceConnection::~CDeviceConnection()$/;"	f	class:CDeviceConnection	signature:()
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^	    class CLidarPacket$/;"	c	namespace:everest::hwdrivers
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                CLidarPacket();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^	    class CLidarPacket$/;"	c	namespace:everest::hwdrivers
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                CLidarPacket();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket	src/include/CLidarPacket.h	/^	    class CLidarPacket$/;"	c	namespace:everest::hwdrivers
CLidarPacket	src/include/CLidarPacket.h	/^                CLidarPacket();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
CLidarPacket	src/src/CLidarPacket.cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::CLidarPacket	src/src/CLidarPacket.cpp	/^CLidarPacket::CLidarPacket()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToByte2	src/src/CLidarPacket.cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte	src/src/CLidarPacket.cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufToUByte2	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
CLidarPacket::bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
CLidarPacket::bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
CLidarPacket::bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
CLidarPacket::bufferToData	src/src/CLidarPacket.cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
CLidarPacket::calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::calcCheckSum	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::calcCheckSum_Xor	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::calcCheckSum_Xor	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::calcCheckSum_Xor	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
CLidarPacket::getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::getParamLength	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
CLidarPacket::hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
CLidarPacket::hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
CLidarPacket::hasWriteCapacity	src/src/CLidarPacket.cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
CLidarPacket::printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::printHex	src/src/CLidarPacket.cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
CLidarPacket::pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
CLidarPacket::pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
CLidarPacket::pushBack	src/src/CLidarPacket.cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
CLidarPacket::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::reset	src/src/CLidarPacket.cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^bool CLidarPacket::verifyCheckSum()$/;"	f	class:CLidarPacket	signature:()
CLidarPacket::verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^bool CLidarPacket::verifyCheckSum(u8 ProtoType)$/;"	f	class:CLidarPacket	signature:(u8 ProtoType)
CLidarPacket::verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^bool CLidarPacket::verifyCheckSum(u8 ProtoType)$/;"	f	class:CLidarPacket	signature:(u8 ProtoType)
CLidarPacket::verifyCheckSum	src/src/CLidarPacket.cpp	/^bool CLidarPacket::verifyCheckSum(u8 ProtoType)$/;"	f	class:CLidarPacket	signature:(u8 ProtoType)
CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver	src/include/CLidarPacketReceiver.h	/^		class CLidarPacketReceiver$/;"	c	namespace:everest::hwdrivers
CLidarPacketReceiver	src/include/CLidarPacketReceiver.h	/^                CLidarPacketReceiver();$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:()
CLidarPacketReceiver	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::CLidarPacketReceiver	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::processStateAcquireData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateAcquireData(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateAcquireData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateAcquireData(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateAcquireData	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateAcquireData(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateHeader1	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader1(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateHeader1	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader1(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateHeader1	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader1(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateHeader2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader2(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateHeader2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader2(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateHeader2	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader2(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateLength(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateLength(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::processStateLength	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateLength(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::readPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::readPacket(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::readPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::readPacket(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::readPacket	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::readPacket(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
CLidarPacketReceiver::receivePacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^bool CLidarPacketReceiver::receivePacket(CLidarPacket *packet)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet)
CLidarPacketReceiver::receivePacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^bool CLidarPacketReceiver::receivePacket(CLidarPacket *packet)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet)
CLidarPacketReceiver::receivePacket	src/src/CLidarPacketReceiver.cpp	/^bool CLidarPacketReceiver::receivePacket(CLidarPacket *packet)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet)
CLidarPacketReceiver::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^void CLidarPacketReceiver::reset()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^void CLidarPacketReceiver::reset()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::reset	src/src/CLidarPacketReceiver.cpp	/^void CLidarPacketReceiver::reset()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::~CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::~CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::~CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::~CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarPacketReceiver::~CLidarPacketReceiver	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::~CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
CLidarUnpacket	src/include/CLidarUnpacket.h	/^		class CLidarUnpacket$/;"	c	namespace:everest::hwdrivers
CLidarUnpacket	src/include/CLidarUnpacket.h	/^                CLidarUnpacket();$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:()
CLidarUnpacket	src/src/CLidarUnpacket.cpp	/^CLidarUnpacket::CLidarUnpacket()$/;"	f	class:CLidarUnpacket	signature:()
CLidarUnpacket::CLidarUnpacket	src/src/CLidarUnpacket.cpp	/^CLidarUnpacket::CLidarUnpacket()$/;"	f	class:CLidarUnpacket	signature:()
CLidarUnpacket::unpacketHealthInfo	src/src/CLidarUnpacket.cpp	/^TLidarError CLidarUnpacket::unpacketHealthInfo(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
CLidarUnpacket::unpacketLidarScan	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketLidarScan(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
CLidarUnpacket::unpacketLidarScan2	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketLidarScan2(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
CLidarUnpacket::unpacketLidarSpeed	src/src/CLidarUnpacket.cpp	/^int CLidarUnpacket::unpacketLidarSpeed(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
CLidarUnpacket::unpacketNewLidarScanHasSingal	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketNewLidarScanHasSingal(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
CLidarUnpacket::unpacketNewLidarScanNoSingal	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketNewLidarScanNoSingal(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
CLidarUnpacket::~CLidarUnpacket	src/src/CLidarUnpacket.cpp	/^CLidarUnpacket::~CLidarUnpacket()$/;"	f	class:CLidarUnpacket	signature:()
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/chenyf\/SDk\/iiiroboticslidar2_linux\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/local\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/chenyf\/SDk\/iiiroboticslidar2_linux$/;"	m
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	312;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	266;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	292;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	270;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CSerialConnection	src/include/CSerialConnection.h	/^				CSerialConnection();$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:()
CSerialConnection	src/include/CSerialConnection.h	/^		class CSerialConnection: public CDeviceConnection$/;"	c	namespace:everest::hwdrivers	inherits:CDeviceConnection
CSerialConnection	src/src/CSerialConnection.cpp	/^CSerialConnection::CSerialConnection()$/;"	f	class:CSerialConnection	signature:()
CSerialConnection::CSerialConnection	src/src/CSerialConnection.cpp	/^CSerialConnection::CSerialConnection()$/;"	f	class:CSerialConnection	signature:()
CSerialConnection::baudToRate	src/src/CSerialConnection.cpp	/^int CSerialConnection::baudToRate(int baud)$/;"	f	class:CSerialConnection	signature:(int baud)
CSerialConnection::close	src/src/CSerialConnection.cpp	/^bool CSerialConnection::close(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::closeSerial	src/src/CSerialConnection.cpp	/^void CSerialConnection::closeSerial()$/;"	f	class:CSerialConnection	signature:()
CSerialConnection::getBaud	src/src/CSerialConnection.cpp	/^int CSerialConnection::getBaud(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getCTS	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getCTS(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getDCD	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getDCD(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getDSR	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getDSR(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getHardwareControl	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getHardwareControl(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getOpenMessage	src/src/CSerialConnection.cpp	/^const char* CSerialConnection::getOpenMessage(int messageNumber)$/;"	f	class:CSerialConnection	signature:(int messageNumber)
CSerialConnection::getPort	src/src/CSerialConnection.cpp	/^const char * CSerialConnection::getPort(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getRing	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getRing(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::getStatus	src/src/CSerialConnection.cpp	/^int CSerialConnection::getStatus(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::internalOpen	src/src/CSerialConnection.cpp	/^int CSerialConnection::internalOpen(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::open	src/src/CSerialConnection.cpp	/^int CSerialConnection::open(const char *port)$/;"	f	class:CSerialConnection	signature:(const char *port)
CSerialConnection::openSimple	src/src/CSerialConnection.cpp	/^bool CSerialConnection::openSimple(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::rateToBaud	src/src/CSerialConnection.cpp	/^int CSerialConnection::rateToBaud(int rate)$/;"	f	class:CSerialConnection	signature:(int rate)
CSerialConnection::read	src/src/CSerialConnection.cpp	/^int CSerialConnection::read(const char *data, unsigned int size, unsigned int msWait)$/;"	f	class:CSerialConnection	signature:(const char *data, unsigned int size, unsigned int msWait)
CSerialConnection::setBaud	src/src/CSerialConnection.cpp	/^bool CSerialConnection::setBaud(int rate)$/;"	f	class:CSerialConnection	signature:(int rate)
CSerialConnection::setHardwareControl	src/src/CSerialConnection.cpp	/^bool CSerialConnection::setHardwareControl(bool hardwareControl)$/;"	f	class:CSerialConnection	signature:(bool hardwareControl)
CSerialConnection::setPort	src/src/CSerialConnection.cpp	/^void CSerialConnection::setPort(const char *port)$/;"	f	class:CSerialConnection	signature:(const char *port)
CSerialConnection::set_opt	src/src/CSerialConnection.cpp	/^int CSerialConnection::set_opt(int fd,int nSpeed, int nBits, char nEvent, int nStop)$/;"	f	class:CSerialConnection	signature:(int fd,int nSpeed, int nBits, char nEvent, int nStop)
CSerialConnection::startTimeStamping	src/src/CSerialConnection.cpp	/^void CSerialConnection::startTimeStamping(void)$/;"	f	class:CSerialConnection	signature:(void)
CSerialConnection::write	src/src/CSerialConnection.cpp	/^int CSerialConnection::write(const char *data, unsigned int size)$/;"	f	class:CSerialConnection	signature:(const char *data, unsigned int size)
CSerialConnection::~CSerialConnection	src/src/CSerialConnection.cpp	/^CSerialConnection::~CSerialConnection()$/;"	f	class:CSerialConnection	signature:()
CSimulateSerial	src/include/CSimulateSerial.h	/^				CSimulateSerial();$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:()
CSimulateSerial	src/include/CSimulateSerial.h	/^		class CSimulateSerial: public CDeviceConnection$/;"	c	namespace:everest::hwdrivers	inherits:CDeviceConnection
CSimulateSerial	src/src/CSimulateSerial.cpp	/^CSimulateSerial::CSimulateSerial()$/;"	f	class:CSimulateSerial	signature:()
CSimulateSerial::CSimulateSerial	src/src/CSimulateSerial.cpp	/^CSimulateSerial::CSimulateSerial()$/;"	f	class:CSimulateSerial	signature:()
CSimulateSerial::close	src/src/CSimulateSerial.cpp	/^bool CSimulateSerial::close(void)$/;"	f	class:CSimulateSerial	signature:(void)
CSimulateSerial::getBaud	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::getBaud(void)$/;"	f	class:CSimulateSerial	signature:(void)
CSimulateSerial::getPort	src/src/CSimulateSerial.cpp	/^const char * CSimulateSerial::getPort(void)$/;"	f	class:CSimulateSerial	signature:(void)
CSimulateSerial::getStatus	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::getStatus(void)$/;"	f	class:CSimulateSerial	signature:(void)
CSimulateSerial::internalOpen	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::internalOpen(void)$/;"	f	class:CSimulateSerial	signature:(void)
CSimulateSerial::open	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::open(const char *port)$/;"	f	class:CSimulateSerial	signature:(const char *port)
CSimulateSerial::openSimple	src/src/CSimulateSerial.cpp	/^bool CSimulateSerial::openSimple(void)$/;"	f	class:CSimulateSerial	signature:(void)
CSimulateSerial::read	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::read(const char *data, unsigned int size, unsigned int msWait)$/;"	f	class:CSimulateSerial	signature:(const char *data, unsigned int size, unsigned int msWait)
CSimulateSerial::setBaud	src/src/CSimulateSerial.cpp	/^bool CSimulateSerial::setBaud(int rate)$/;"	f	class:CSimulateSerial	signature:(int rate)
CSimulateSerial::setPort	src/src/CSimulateSerial.cpp	/^void CSimulateSerial::setPort(const char *port)$/;"	f	class:CSimulateSerial	signature:(const char *port)
CSimulateSerial::write	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::write(const char *data, unsigned int size)$/;"	f	class:CSimulateSerial	signature:(const char *data, unsigned int size)
CSimulateSerial::~CSimulateSerial	src/src/CSimulateSerial.cpp	/^CSimulateSerial::~CSimulateSerial()$/;"	f	class:CSimulateSerial	signature:()
CStrMap	src/include/CDeviceConnection.h	/^		typedef std::map<int, std::string> CStrMap;$/;"	t	namespace:everest::hwdrivers
CTime	src/include/CTime.h	/^                CTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
CTime	src/include/CTime.h	/^        class CTime$/;"	c	namespace:everest::hwdrivers
CTime	src/src/CTime.cpp	/^CTime::CTime()$/;"	f	class:CTime	signature:()
CTime::CTime	src/src/CTime.cpp	/^CTime::CTime()$/;"	f	class:CTime	signature:()
CTime::addTime	src/src/CTime.cpp	/^TTimeStamp CTime::addTime(TTimeStamp time, double time_ms)$/;"	f	class:CTime	signature:(TTimeStamp time, double time_ms)
CTime::getCpuTime	src/src/CTime.cpp	/^TTimeStamp CTime::getCpuTime()$/;"	f	class:CTime	signature:()
CTime::getRealTime	src/src/CTime.cpp	/^TTimeStamp CTime::getRealTime()$/;"	f	class:CTime	signature:()
CTime::getTimeString	src/src/CTime.cpp	/^std::string CTime::getTimeString()$/;"	f	class:CTime	signature:()
CTime::timeDifference	src/src/CTime.cpp	/^double CTime::timeDifference( const TTimeStamp &t1, const TTimeStamp &t2 )$/;"	f	class:CTime	signature:( const TTimeStamp &t1, const TTimeStamp &t2 )
CTime::time_tToTimestamp	src/src/CTime.cpp	/^TTimeStamp CTime::time_tToTimestamp(const time_t &t)$/;"	f	class:CTime	signature:(const time_t &t)
CTime::timestampToParts	src/src/CTime.cpp	/^void CTime::timestampToParts( TTimeStamp t, TTimeParts &p , bool localTime)$/;"	f	class:CTime	signature:( TTimeStamp t, TTimeParts &p , bool localTime)
CTime::timestampTotime_t	src/src/CTime.cpp	/^double CTime::timestampTotime_t( const TTimeStamp  &t )$/;"	f	class:CTime	signature:( const TTimeStamp &t )
CTime::~CTime	src/src/CTime.cpp	/^CTime::~CTime()$/;"	f	class:CTime	signature:()
CXX_STD	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
CXX_STD	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	560;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	575;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	577;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	580;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	582;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
DEC	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
DEC	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	481;"	d	file:
DEG2RAD	app/node.cpp	16;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EVEREST_BASE_CLOGUTILS_H_	src/include/CLogUtitls.h	3;"	d
EVEREST_HWDRIVERS_CSERIALCONNECTION_H_	src/include/CSerialConnection.h	15;"	d
EVEREST_HWDRIVERS_CSIMULATESERIAL_H_	src/include/CSimulateSerial.h	15;"	d
EVEREST_LIDAR_C3IROBOTICSLIDAR_H	src/include/C3iroboticsLidar.h	16;"	d
EVEREST_LIDAR_CARCTIME_H	src/include/CArcTime.h	15;"	d
EVEREST_LIDAR_CCOUNTDOWN_H_	src/include/CCountDown.h	16;"	d
EVEREST_LIDAR_CLIDARPACKETRECEIVER_H	src/include/CLidarPacketReceiver.h	15;"	d
EVEREST_LIDAR_CLIDARPACKET_H	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	16;"	d
EVEREST_LIDAR_CLIDARPACKET_H	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	16;"	d
EVEREST_LIDAR_CLIDARPACKET_H	src/include/CLidarPacket.h	16;"	d
EVEREST_LIDAR_CLIDARUNPACKET_H	src/include/CLidarUnpacket.h	16;"	d
EVEREST_LIDAR_CTIME_H_	src/include/CTime.h	16;"	d
EVEREST_LIDAR_DEVICECONNECTION_H_	src/include/CDeviceConnection.h	15;"	d
FALSE	src/include/typedef.h	/^  FALSE = 0, TRUE  = !FALSE$/;"	e	enum:TYPEBOOL
GRAB_SCAN_ELSE_DATA	src/include/C3iroboticsLidar.h	/^                    GRAB_SCAN_ELSE_DATA$/;"	e	enum:everest::hwdrivers::C3iroboticsLidar::TGrabScanState
GRAB_SCAN_FIRST	src/include/C3iroboticsLidar.h	/^                    GRAB_SCAN_FIRST = 0,$/;"	e	enum:everest::hwdrivers::C3iroboticsLidar::TGrabScanState
HBREG	src/include/typedef.h	28;"	d
HEX	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	507;"	d	file:
HEX	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	492;"	d	file:
HSREG	src/include/typedef.h	27;"	d
HWREG	src/include/typedef.h	25;"	d
HWREGS	src/include/typedef.h	26;"	d
I3LIDAR_DISTANCE	src/include/C3iroboticsLidar.h	/^            I3LIDAR_DISTANCE = 0xA9,$/;"	e	enum:everest::hwdrivers::TLidarCommandID
I3LIDAR_HEALTH	src/include/C3iroboticsLidar.h	/^            I3LIDAR_HEALTH   = 0xAB,$/;"	e	enum:everest::hwdrivers::TLidarCommandID
I3LIDAR_LIDAR_SPEED	src/include/C3iroboticsLidar.h	/^            I3LIDAR_LIDAR_SPEED  = 0xAE,$/;"	e	enum:everest::hwdrivers::TLidarCommandID
I3LIDAR_NEW_DISTANCE	src/include/C3iroboticsLidar.h	/^            I3LIDAR_NEW_DISTANCE = 0xAD$/;"	e	enum:everest::hwdrivers::TLidarCommandID
ID_VOID_MAIN	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INVALID_TIMESTAMP	src/include/CTime.h	23;"	d
LIDAR_ERROR_CALIBRATION_PARAMS	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_CALIBRATION_PARAMS,$/;"	e	enum:everest::hwdrivers::TLidarError
LIDAR_ERROR_CCD	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_CCD,$/;"	e	enum:everest::hwdrivers::TLidarError
LIDAR_ERROR_LD_OPTICAL_POWER_PARAMS	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_LD_OPTICAL_POWER_PARAMS,$/;"	e	enum:everest::hwdrivers::TLidarError
LIDAR_ERROR_NONE	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_NONE = 0,$/;"	e	enum:everest::hwdrivers::TLidarError
LIDAR_ERROR_UNKNOW	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_UNKNOW$/;"	e	enum:everest::hwdrivers::TLidarError
LIDAR_GRAB_ELSE	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_ELSE$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
LIDAR_GRAB_ERRO	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_ERRO,$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
LIDAR_GRAB_ING	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_ING = 0,$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
LIDAR_GRAB_SUCESS	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_SUCESS,$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
LIDAR_PACEKT_HEADER1	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	26;"	d	file:
LIDAR_PACEKT_HEADER1	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	26;"	d	file:
LIDAR_PACEKT_HEADER1	src/src/CLidarPacketReceiver.cpp	26;"	d	file:
LIDAR_PACEKT_HEADER2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	27;"	d	file:
LIDAR_PACEKT_HEADER2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	27;"	d	file:
LIDAR_PACEKT_HEADER2	src/src/CLidarPacketReceiver.cpp	27;"	d	file:
OPEN_ALREADY_OPEN	src/include/CSerialConnection.h	/^					OPEN_ALREADY_OPEN 				\/* Connection was already open *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
OPEN_ALREADY_OPEN	src/include/CSimulateSerial.h	/^					OPEN_ALREADY_OPEN 				\/* Connection was already open *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
OPEN_COULD_NOT_OPEN_PORT	src/include/CSerialConnection.h	/^					OPEN_COULD_NOT_OPEN_PORT = 1,  	\/* Could not open the port *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
OPEN_COULD_NOT_OPEN_PORT	src/include/CSimulateSerial.h	/^					OPEN_COULD_NOT_OPEN_PORT = 1,  	\/* Could not open the port *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
OPEN_COULD_NOT_SET_BAUD	src/include/CSerialConnection.h	/^					OPEN_COULD_NOT_SET_BAUD, 		\/* Baud rate valid, but could not set it *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
OPEN_COULD_NOT_SET_BAUD	src/include/CSimulateSerial.h	/^					OPEN_COULD_NOT_SET_BAUD, 		\/* Baud rate valid, but could not set it *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
OPEN_COULD_NOT_SET_UP_PORT	src/include/CSerialConnection.h	/^					OPEN_COULD_NOT_SET_UP_PORT, 	\/* Could not set up the port *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
OPEN_COULD_NOT_SET_UP_PORT	src/include/CSimulateSerial.h	/^					OPEN_COULD_NOT_SET_UP_PORT, 	\/* Could not set up the port *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
OPEN_INVALID_BAUD_RATE	src/include/CSerialConnection.h	/^					OPEN_INVALID_BAUD_RATE, 		\/* Baud rate is not valid *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
OPEN_INVALID_BAUD_RATE	src/include/CSimulateSerial.h	/^					OPEN_INVALID_BAUD_RATE, 		\/* Baud rate is not valid *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
Open	src/include/CSerialConnection.h	/^				enum Open$/;"	g	class:everest::hwdrivers::CSerialConnection	access:public
Open	src/include/CSimulateSerial.h	/^				enum Open$/;"	g	class:everest::hwdrivers::CSimulateSerial	access:public
PACKET_FAILED	src/include/CLidarPacketReceiver.h	/^                    PACKET_FAILED$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TPacketResult
PACKET_ING	src/include/CLidarPacketReceiver.h	/^                    PACKET_ING = 0,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TPacketResult
PACKET_SUCCESS	src/include/CLidarPacketReceiver.h	/^                    PACKET_SUCCESS,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TPacketResult
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
RM	build/Makefile	/^RM = \/usr\/local\/bin\/cmake -E remove -f$/;"	m
RslidarDataComplete	app/node.cpp	/^}RslidarDataComplete;$/;"	t	typeref:struct:_rslidar_data	file:
S16_MAX	src/include/typedef.h	34;"	d
S16_MIN	src/include/typedef.h	35;"	d
S32_MAX	src/include/typedef.h	37;"	d
S32_MIN	src/include/typedef.h	38;"	d
S8_MAX	src/include/typedef.h	31;"	d
S8_MIN	src/include/typedef.h	32;"	d
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	189;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
STATE_ACQUIRE_DATA	src/include/CLidarPacketReceiver.h	/^                    STATE_ACQUIRE_DATA$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
STATE_HEADER1	src/include/CLidarPacketReceiver.h	/^                    STATE_HEADER1 = 0,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
STATE_HEADER2	src/include/CLidarPacketReceiver.h	/^                    STATE_HEADER2,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
STATE_LENGHT	src/include/CLidarPacketReceiver.h	/^                    STATE_LENGHT,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
STATUS_CLOSED_ERROR	src/include/CDeviceConnection.h	/^                STATUS_CLOSED_ERROR 		\/* Tried to open, but failed *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
STATUS_CLOSED_NORMALLY	src/include/CDeviceConnection.h	/^                STATUS_CLOSED_NORMALLY, 	\/* Tried to open, but failed *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
STATUS_NEVER_OPENED	src/include/CDeviceConnection.h	/^                STATUS_NEVER_OPENED = 1, 	\/* Never opened *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
STATUS_OPEN	src/include/CDeviceConnection.h	/^                STATUS_OPEN,  				\/* Currently open *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
STATUS_OPEN_FAILED	src/include/CDeviceConnection.h	/^                STATUS_OPEN_FAILED, 		\/* Tried to open, but failed *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
STRINGIFY	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	333;"	d	file:
STRINGIFY	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
Status	src/include/CDeviceConnection.h	/^			  enum Status$/;"	g	class:everest::hwdrivers::CDeviceConnection	access:public
TGrabScanState	src/include/C3iroboticsLidar.h	/^                enum TGrabScanState$/;"	g	class:everest::hwdrivers::C3iroboticsLidar	access:public
TIOGETTIMESTAMP	src/src/CSerialConnection.cpp	40;"	d	file:
TIOSTARTTIMESTAMP	src/src/CSerialConnection.cpp	41;"	d	file:
TLidarCommandID	src/include/C3iroboticsLidar.h	/^        enum TLidarCommandID$/;"	g	namespace:everest::hwdrivers
TLidarError	src/include/CLidarUnpacket.h	/^        enum TLidarError$/;"	g	namespace:everest::hwdrivers
TLidarGrabResult	src/include/C3iroboticsLidar.h	/^        enum TLidarGrabResult$/;"	g	namespace:everest::hwdrivers
TLidarScan	src/include/C3iroboticsLidar.h	/^	        TLidarScan() : angle(), distance(), signal(){ }$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:()
TLidarScan	src/include/C3iroboticsLidar.h	/^	    struct TLidarScan$/;"	s	namespace:everest::hwdrivers
TPacketResult	src/include/CLidarPacketReceiver.h	/^                enum TPacketResult$/;"	g	class:everest::hwdrivers::CLidarPacketReceiver	access:public
TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacket::TParams	access:public	signature:()
TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacket	access:public
TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacket::TParams	access:public	signature:()
TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacket	access:public
TParams	src/include/C3iroboticsLidar.h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public	signature:()
TParams	src/include/C3iroboticsLidar.h	/^                struct TParams$/;"	s	class:everest::hwdrivers::C3iroboticsLidar	access:private
TParams	src/include/CLidarPacket.h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacket::TParams	access:public	signature:()
TParams	src/include/CLidarPacket.h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacket	access:public
TParams	src/include/CLidarPacketReceiver.h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacketReceiver::TParams	access:public	signature:()
TParams	src/include/CLidarPacketReceiver.h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacketReceiver	access:public
TRUE	src/include/typedef.h	/^  FALSE = 0, TRUE  = !FALSE$/;"	e	enum:TYPEBOOL
TState	src/include/CLidarPacketReceiver.h	/^                enum TState$/;"	g	class:everest::hwdrivers::CLidarPacketReceiver	access:public
TTimeParts	src/include/CTime.h	/^		struct TTimeParts$/;"	s	namespace:everest::hwdrivers
TTimeStamp	src/include/CTime.h	/^        typedef uint64_t TTimeStamp;$/;"	t	namespace:everest::hwdrivers
TToothScan	src/include/CLidarUnpacket.h	/^	    struct TToothScan$/;"	s	namespace:everest::hwdrivers
TToothScan	src/include/CLidarUnpacket.h	/^            TToothScan() : offset_valid(false), offset_angle(0.0), lidar_speed(-1.0), angle(0.0), distance(), signal(){ }$/;"	f	struct:everest::hwdrivers::TToothScan	access:public	signature:()
TYPEBOOL	src/include/typedef.h	/^enum TYPEBOOL$/;"	g
U16_MAX	src/include/typedef.h	33;"	d
U32_MAX	src/include/typedef.h	36;"	d
U8_MAX	src/include/typedef.h	30;"	d
__TYPEDEF_H__	src/include/typedef.h	3;"	d
_rslidar_data	app/node.cpp	/^    _rslidar_data()$/;"	f	struct:_rslidar_data	access:public	signature:()
_rslidar_data	app/node.cpp	/^typedef struct _rslidar_data$/;"	s	file:
_rslidar_data::_rslidar_data	app/node.cpp	/^    _rslidar_data()$/;"	f	struct:_rslidar_data	access:public	signature:()
_rslidar_data::angle	app/node.cpp	/^    float   angle;$/;"	m	struct:_rslidar_data	file:	access:public
_rslidar_data::distance	app/node.cpp	/^    float   distance;$/;"	m	struct:_rslidar_data	file:	access:public
_rslidar_data::signal	app/node.cpp	/^    uint8_t signal;$/;"	m	struct:_rslidar_data	file:	access:public
addMSec	src/include/CArcTime.h	/^          bool addMSec(long ms)$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(long ms)
addMSecLL	src/include/CArcTime.h	/^          bool addMSecLL(long long ms)$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(long long ms)
addTime	src/include/CTime.h	/^                static TTimeStamp addTime(TTimeStamp time, double time_ms);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:(TTimeStamp time, double time_ms)
addTime	src/src/CTime.cpp	/^TTimeStamp CTime::addTime(TTimeStamp time, double time_ms)$/;"	f	class:CTime	signature:(TTimeStamp time, double time_ms)
analysisHealthInfo	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisHealthInfo(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
analysisHealthInfo	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisHealthInfo(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
analysisLidarSpeed	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisLidarSpeed(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
analysisLidarSpeed	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisLidarSpeed(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
analysisNewToothScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisNewToothScan(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
analysisNewToothScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisNewToothScan(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
analysisPacket	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisPacket(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
analysisPacket	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisPacket(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
analysisToothScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisToothScan(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
analysisToothScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::analysisToothScan(CLidarPacket &lidar_packet)$/;"	f	class:C3iroboticsLidar	signature:(CLidarPacket &lidar_packet)
angle	app/node.cpp	/^    float   angle;$/;"	m	struct:_rslidar_data	file:	access:public
angle	src/include/C3iroboticsLidar.h	/^	        std::vector<float> angle;$/;"	m	struct:everest::hwdrivers::TLidarScan	access:public
angle	src/include/CLidarUnpacket.h	/^            float                 angle;            \/\/ unit: degree$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
auchCRCHi	src/include/C3iroboticsLidarProtocol.h	/^const uint8_t auchCRCHi[256] = {$/;"	v
auchCRCLo	src/include/C3iroboticsLidarProtocol.h	/^const uint8_t auchCRCLo[256] = {$/;"	v
baudToRate	src/include/CSerialConnection.h	/^				int baudToRate(int baud);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:protected	signature:(int baud)
baudToRate	src/include/CSimulateSerial.h	/^				int baudToRate(int baud);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:protected	signature:(int baud)
baudToRate	src/src/CSerialConnection.cpp	/^int CSerialConnection::baudToRate(int baud)$/;"	f	class:CSerialConnection	signature:(int baud)
bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static s16 bufToByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static s16 bufToByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToByte2	src/include/CLidarPacket.h	/^                static s16 bufToByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToByte2	src/src/CLidarPacket.cpp	/^s16 CLidarPacket::bufToByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static u8 bufToUByte(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static u8 bufToUByte(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte	src/include/CLidarPacket.h	/^                static u8 bufToUByte(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToUByte	src/src/CLidarPacket.cpp	/^u8 CLidarPacket::bufToUByte(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static u16 bufToUByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static u16 bufToUByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
bufToUByte2	src/include/CLidarPacket.h	/^                static u16 bufToUByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
bufToUByte2	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::bufToUByte2(u8 *src_ptr)$/;"	f	class:CLidarPacket	signature:(u8 *src_ptr)
buf_size	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                    u16 buf_size;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
buf_size	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                    u16 buf_size;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
buf_size	src/include/CLidarPacket.h	/^                    u16 buf_size;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static void bufferToData(void *dest_ptr, void *src_ptr, size_t length);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(void *dest_ptr, void *src_ptr, size_t length)
bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static void bufferToData(void *dest_ptr, void *src_ptr, size_t length);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(void *dest_ptr, void *src_ptr, size_t length)
bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
bufferToData	src/include/CLidarPacket.h	/^                static void bufferToData(void *dest_ptr, void *src_ptr, size_t length);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(void *dest_ptr, void *src_ptr, size_t length)
bufferToData	src/src/CLidarPacket.cpp	/^void CLidarPacket::bufferToData(void *dest_ptr, void *src_ptr, size_t length)$/;"	f	class:CLidarPacket	signature:(void *dest_ptr, void *src_ptr, size_t length)
buildStrMap	src/include/CDeviceConnection.h	/^				void buildStrMap(void);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:protected	signature:(void)
buildStrMap	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::buildStrMap(void)$/;"	f	class:CDeviceConnection	signature:(void)
calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				u16 calcCheckSum(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^				u16 calcCheckSum(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum	src/include/CLidarPacket.h	/^				u16 calcCheckSum(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::calcCheckSum(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum_Xor	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				u16 calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum_Xor	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum_Xor	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum_Xor	src/include/CLidarPacket.h	/^				u16 calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
calcCheckSum_Xor	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes)$/;"	f	class:CLidarPacket	signature:(u8 *start_bytes, u16 num_bytes)
clear	src/include/C3iroboticsLidar.h	/^	        void clear()$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:()
close	src/include/CDeviceConnection.h	/^			  virtual bool close(void) { return false; }$/;"	f	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void)
close	src/include/CSerialConnection.h	/^				virtual bool close(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
close	src/include/CSimulateSerial.h	/^				virtual bool close(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
close	src/src/CSerialConnection.cpp	/^bool CSerialConnection::close(void)$/;"	f	class:CSerialConnection	signature:(void)
close	src/src/CSimulateSerial.cpp	/^bool CSimulateSerial::close(void)$/;"	f	class:CSimulateSerial	signature:(void)
closeSerial	src/include/CSerialConnection.h	/^				void closeSerial();$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:()
closeSerial	src/src/CSerialConnection.cpp	/^void CSerialConnection::closeSerial()$/;"	f	class:CSerialConnection	signature:()
combineScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult combineScan(TToothScan &tooth_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan)
combineScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::combineScan(TToothScan &tooth_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan)
const	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
dateTimeLocalToString	src/include/CLogUtitls.h	/^static std::string  dateTimeLocalToString(const everest::hwdrivers::TTimeStamp &t)$/;"	f	signature:(const everest::hwdrivers::TTimeStamp &t)
day	src/include/CTime.h	/^			uint8_t		day;    \/** Day (1-31) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
day_of_week	src/include/CTime.h	/^			uint8_t		day_of_week; \/** Day of week (1:Sunday, 7:Saturday) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
daylight_saving	src/include/CTime.h	/^			int			daylight_saving;$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
distance	app/node.cpp	/^    float   distance;$/;"	m	struct:_rslidar_data	file:	access:public
distance	src/include/C3iroboticsLidar.h	/^	        std::vector<float> distance;$/;"	m	struct:everest::hwdrivers::TLidarScan	access:public
distance	src/include/CLidarUnpacket.h	/^            std::vector<float>    distance;         \/\/ unit: meter$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
enableLogWhenReceiveTimeOvers	src/include/C3iroboticsLidar.h	/^                void enableLogWhenReceiveTimeOvers(bool state) {m_receiver.enableLogWhenReceiveTimeOvers(state);}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:(bool state)
enableLogWhenReceiveTimeOvers	src/include/CLidarPacketReceiver.h	/^                void enableLogWhenReceiveTimeOvers(bool state) {m_log_when_receive_time_over = state;}$/;"	f	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(bool state)
everest	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^namespace everest$/;"	n
everest	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^namespace everest$/;"	n
everest	src/include/C3iroboticsLidar.h	/^namespace everest$/;"	n
everest	src/include/CArcTime.h	/^namespace everest$/;"	n
everest	src/include/CCountDown.h	/^namespace everest$/;"	n
everest	src/include/CDeviceConnection.h	/^namespace everest$/;"	n
everest	src/include/CLidarPacket.h	/^namespace everest$/;"	n
everest	src/include/CLidarPacketReceiver.h	/^namespace everest$/;"	n
everest	src/include/CLidarUnpacket.h	/^namespace everest$/;"	n
everest	src/include/CSerialConnection.h	/^namespace everest$/;"	n
everest	src/include/CSimulateSerial.h	/^namespace everest$/;"	n
everest	src/include/CTime.h	/^namespace everest$/;"	n
everest::hwdrivers	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/C3iroboticsLidar.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CArcTime.h	/^    namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CCountDown.h	/^    namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CDeviceConnection.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CLidarPacket.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CLidarPacketReceiver.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CLidarUnpacket.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CSerialConnection.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CSimulateSerial.h	/^	namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers	src/include/CTime.h	/^    namespace hwdrivers$/;"	n	namespace:everest
everest::hwdrivers::C3iroboticsLidar	src/include/C3iroboticsLidar.h	/^		class C3iroboticsLidar$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::C3iroboticsLidar::C3iroboticsLidar	src/include/C3iroboticsLidar.h	/^                C3iroboticsLidar();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::GRAB_SCAN_ELSE_DATA	src/include/C3iroboticsLidar.h	/^                    GRAB_SCAN_ELSE_DATA$/;"	e	enum:everest::hwdrivers::C3iroboticsLidar::TGrabScanState
everest::hwdrivers::C3iroboticsLidar::GRAB_SCAN_FIRST	src/include/C3iroboticsLidar.h	/^                    GRAB_SCAN_FIRST = 0,$/;"	e	enum:everest::hwdrivers::C3iroboticsLidar::TGrabScanState
everest::hwdrivers::C3iroboticsLidar::TGrabScanState	src/include/C3iroboticsLidar.h	/^                enum TGrabScanState$/;"	g	class:everest::hwdrivers::C3iroboticsLidar	access:public
everest::hwdrivers::C3iroboticsLidar::TParams	src/include/C3iroboticsLidar.h	/^                struct TParams$/;"	s	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::TParams::TParams	src/include/C3iroboticsLidar.h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::TParams::packet_wait_time_ms	src/include/C3iroboticsLidar.h	/^                    size_t packet_wait_time_ms;$/;"	m	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public
everest::hwdrivers::C3iroboticsLidar::TParams::scan_time_out_ms	src/include/C3iroboticsLidar.h	/^                    size_t scan_time_out_ms;$/;"	m	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public
everest::hwdrivers::C3iroboticsLidar::TParams::tooth_number	src/include/C3iroboticsLidar.h	/^                    int tooth_number;$/;"	m	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public
everest::hwdrivers::C3iroboticsLidar::analysisHealthInfo	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisHealthInfo(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
everest::hwdrivers::C3iroboticsLidar::analysisLidarSpeed	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisLidarSpeed(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
everest::hwdrivers::C3iroboticsLidar::analysisNewToothScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisNewToothScan(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
everest::hwdrivers::C3iroboticsLidar::analysisPacket	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisPacket(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
everest::hwdrivers::C3iroboticsLidar::analysisToothScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult analysisToothScan(CLidarPacket &lidar_packet);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(CLidarPacket &lidar_packet)
everest::hwdrivers::C3iroboticsLidar::combineScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult combineScan(TToothScan &tooth_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan)
everest::hwdrivers::C3iroboticsLidar::enableLogWhenReceiveTimeOvers	src/include/C3iroboticsLidar.h	/^                void enableLogWhenReceiveTimeOvers(bool state) {m_receiver.enableLogWhenReceiveTimeOvers(state);}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:(bool state)
everest::hwdrivers::C3iroboticsLidar::getLidarCurrentSpeed	src/include/C3iroboticsLidar.h	/^                double getLidarCurrentSpeed() {return m_current_lidar_speed;}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::getLidarError	src/include/C3iroboticsLidar.h	/^                TLidarError getLidarError() { return m_lidar_erro; }$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::getLidarScan	src/include/C3iroboticsLidar.h	/^                TLidarScan& getLidarScan() { return m_lidar_scan; }$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::getScanData	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult getScanData();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::grabFirstScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult grabFirstScan(TToothScan &tooth_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan)
everest::hwdrivers::C3iroboticsLidar::initilize	src/include/C3iroboticsLidar.h	/^                bool initilize(CDeviceConnection *device_connect);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:(CDeviceConnection *device_connect)
everest::hwdrivers::C3iroboticsLidar::isFirstScan	src/include/C3iroboticsLidar.h	/^                bool isFirstScan(TToothScan &tooth_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan)
everest::hwdrivers::C3iroboticsLidar::isReceiveLidarSpeed	src/include/C3iroboticsLidar.h	/^                bool isReceiveLidarSpeed() {bool flag = m_receive_lidar_speed; m_receive_lidar_speed = false; return flag;}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::C3iroboticsLidar::m_current_lidar_speed	src/include/C3iroboticsLidar.h	/^                double                  m_current_lidar_speed;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_data_count_down	src/include/C3iroboticsLidar.h	/^                CCountDown              m_data_count_down;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_data_with_signal	src/include/C3iroboticsLidar.h	/^                bool                    m_data_with_signal;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_device_connect	src/include/C3iroboticsLidar.h	/^                CDeviceConnection       *m_device_connect;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_grab_scan_count	src/include/C3iroboticsLidar.h	/^                int                     m_grab_scan_count;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_grab_scan_state	src/include/C3iroboticsLidar.h	/^                TGrabScanState          m_grab_scan_state;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_last_scan_angle	src/include/C3iroboticsLidar.h	/^                float                   m_last_scan_angle;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_lidar_erro	src/include/C3iroboticsLidar.h	/^                TLidarError             m_lidar_erro;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_lidar_scan	src/include/C3iroboticsLidar.h	/^                TLidarScan              m_lidar_scan;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_packet	src/include/C3iroboticsLidar.h	/^                CLidarPacket            m_packet;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_params	src/include/C3iroboticsLidar.h	/^                TParams                 m_params;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_receive_lidar_speed	src/include/C3iroboticsLidar.h	/^                bool                    m_receive_lidar_speed;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_receiver	src/include/C3iroboticsLidar.h	/^                CLidarPacketReceiver    m_receiver;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_remainder_flag	src/include/C3iroboticsLidar.h	/^                bool                    m_remainder_flag;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::m_remainder_tooth_scan	src/include/C3iroboticsLidar.h	/^                TToothScan              m_remainder_tooth_scan;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
everest::hwdrivers::C3iroboticsLidar::resetScanGrab	src/include/C3iroboticsLidar.h	/^                void resetScanGrab();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:()
everest::hwdrivers::C3iroboticsLidar::setDataWithSignal	src/include/C3iroboticsLidar.h	/^                void setDataWithSignal(bool data_with_signal) {m_data_with_signal = data_with_signal;}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:(bool data_with_signal)
everest::hwdrivers::C3iroboticsLidar::toothScan2LidarScan	src/include/C3iroboticsLidar.h	/^                void toothScan2LidarScan(TToothScan &tooth_scan, TLidarScan &lidar_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan, TLidarScan &lidar_scan)
everest::hwdrivers::C3iroboticsLidar::~C3iroboticsLidar	src/include/C3iroboticsLidar.h	/^                ~C3iroboticsLidar();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
everest::hwdrivers::CArcTime	src/include/CArcTime.h	/^        class CArcTime$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CArcTime::CArcTime	src/include/CArcTime.h	/^              CArcTime() { setToNow(); }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:()
everest::hwdrivers::CArcTime::CArcTime	src/include/CArcTime.h	/^              CArcTime(const CArcTime &other) :$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime &other)
everest::hwdrivers::CArcTime::addMSec	src/include/CArcTime.h	/^          bool addMSec(long ms)$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(long ms)
everest::hwdrivers::CArcTime::addMSecLL	src/include/CArcTime.h	/^          bool addMSecLL(long long ms)$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(long long ms)
everest::hwdrivers::CArcTime::getMSec	src/include/CArcTime.h	/^          unsigned long getMSec(void) const { return m_MSec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::getMSecLL	src/include/CArcTime.h	/^          unsigned long long getMSecLL(void) const { return m_MSec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::getSec	src/include/CArcTime.h	/^          unsigned long getSec(void) const { return m_Sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::getSecLL	src/include/CArcTime.h	/^          unsigned long long getSecLL(void) const { return m_Sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::isAfter	src/include/CArcTime.h	/^          bool isAfter(CArcTime testTime) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime testTime) const
everest::hwdrivers::CArcTime::isAt	src/include/CArcTime.h	/^          bool isAt(CArcTime testTime) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime testTime) const
everest::hwdrivers::CArcTime::isBefore	src/include/CArcTime.h	/^          bool isBefore(CArcTime testTime) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime testTime) const
everest::hwdrivers::CArcTime::log	src/include/CArcTime.h	/^          void log(const char *prefix = NULL) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const char *prefix = NULL) const
everest::hwdrivers::CArcTime::mSecSince	src/include/CArcTime.h	/^              long mSecSince(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
everest::hwdrivers::CArcTime::mSecSince	src/include/CArcTime.h	/^          long mSecSince(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::mSecSinceLL	src/include/CArcTime.h	/^          long long mSecSinceLL(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
everest::hwdrivers::CArcTime::mSecSinceLL	src/include/CArcTime.h	/^          long long mSecSinceLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::mSecTo	src/include/CArcTime.h	/^          long mSecTo(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::mSecToLL	src/include/CArcTime.h	/^          long long mSecToLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::m_MSec	src/include/CArcTime.h	/^          unsigned long long m_MSec;$/;"	m	class:everest::hwdrivers::CArcTime	access:protected
everest::hwdrivers::CArcTime::m_Sec	src/include/CArcTime.h	/^          unsigned long long m_Sec;$/;"	m	class:everest::hwdrivers::CArcTime	access:protected
everest::hwdrivers::CArcTime::operator !=	src/include/CArcTime.h	/^          bool operator!=(const CArcTime& other) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime& other) const
everest::hwdrivers::CArcTime::operator <	src/include/CArcTime.h	/^          bool operator<(const CArcTime& other) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime& other) const
everest::hwdrivers::CArcTime::operator =	src/include/CArcTime.h	/^              CArcTime &operator=(const CArcTime &other)$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime &other)
everest::hwdrivers::CArcTime::operator ==	src/include/CArcTime.h	/^          bool operator==(const CArcTime& other) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime& other) const
everest::hwdrivers::CArcTime::ourMonotonicClock	src/include/CArcTime.h	/^          static bool ourMonotonicClock;$/;"	m	class:everest::hwdrivers::CArcTime	access:protected
everest::hwdrivers::CArcTime::secSince	src/include/CArcTime.h	/^          long secSince(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
everest::hwdrivers::CArcTime::secSince	src/include/CArcTime.h	/^          long secSince(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::secSinceLL	src/include/CArcTime.h	/^          long long secSinceLL(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
everest::hwdrivers::CArcTime::secSinceLL	src/include/CArcTime.h	/^          long long secSinceLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::secTo	src/include/CArcTime.h	/^          long secTo(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::secToLL	src/include/CArcTime.h	/^          long long secToLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
everest::hwdrivers::CArcTime::setMSec	src/include/CArcTime.h	/^          void setMSec(unsigned long msec) { m_MSec = msec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long msec)
everest::hwdrivers::CArcTime::setMSecLL	src/include/CArcTime.h	/^          void setMSecLL(unsigned long long msec) { m_MSec = msec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long long msec)
everest::hwdrivers::CArcTime::setSec	src/include/CArcTime.h	/^          void setSec(unsigned long sec) { m_Sec = sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long sec)
everest::hwdrivers::CArcTime::setSecLL	src/include/CArcTime.h	/^          void setSecLL(unsigned long long sec) { m_Sec = sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long long sec)
everest::hwdrivers::CArcTime::setToNow	src/include/CArcTime.h	/^          void setToNow(void);$/;"	p	class:everest::hwdrivers::CArcTime	access:public	signature:(void)
everest::hwdrivers::CArcTime::usingMonotonicClock	src/include/CArcTime.h	/^          static bool usingMonotonicClock()$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:()
everest::hwdrivers::CArcTime::~CArcTime	src/include/CArcTime.h	/^              ~CArcTime() {}$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:()
everest::hwdrivers::CCountDown	src/include/CCountDown.h	/^        class CCountDown$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CCountDown::CCountDown	src/include/CCountDown.h	/^                CCountDown();$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:()
everest::hwdrivers::CCountDown::CCountDown	src/include/CCountDown.h	/^                CCountDown(double time_ms);$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:(double time_ms)
everest::hwdrivers::CCountDown::getInputTime	src/include/CCountDown.h	/^                double getInputTime() const { return m_time_ms;}$/;"	f	class:everest::hwdrivers::CCountDown	access:public	signature:() const
everest::hwdrivers::CCountDown::getLeftMsTime	src/include/CCountDown.h	/^                double getLeftMsTime() const { return getLeftTime() * 1000.0;}$/;"	f	class:everest::hwdrivers::CCountDown	access:public	signature:() const
everest::hwdrivers::CCountDown::getLeftTime	src/include/CCountDown.h	/^                double getLeftTime() const;$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:() const
everest::hwdrivers::CCountDown::isEnd	src/include/CCountDown.h	/^                bool isEnd() const;$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:() const
everest::hwdrivers::CCountDown::m_end_flag	src/include/CCountDown.h	/^                bool                        m_end_flag;$/;"	m	class:everest::hwdrivers::CCountDown	access:private
everest::hwdrivers::CCountDown::m_end_time	src/include/CCountDown.h	/^                TTimeStamp                  m_end_time;$/;"	m	class:everest::hwdrivers::CCountDown	access:private
everest::hwdrivers::CCountDown::m_time_ms	src/include/CCountDown.h	/^                double                      m_time_ms;$/;"	m	class:everest::hwdrivers::CCountDown	access:private
everest::hwdrivers::CCountDown::setTime	src/include/CCountDown.h	/^                void setTime(double time_ms);$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:(double time_ms)
everest::hwdrivers::CCountDown::~CCountDown	src/include/CCountDown.h	/^                ~CCountDown();$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:()
everest::hwdrivers::CDeviceConnection	src/include/CDeviceConnection.h	/^		class CDeviceConnection$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CDeviceConnection::CDeviceConnection	src/include/CDeviceConnection.h	/^			  CDeviceConnection();$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:()
everest::hwdrivers::CDeviceConnection::STATUS_CLOSED_ERROR	src/include/CDeviceConnection.h	/^                STATUS_CLOSED_ERROR 		\/* Tried to open, but failed *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
everest::hwdrivers::CDeviceConnection::STATUS_CLOSED_NORMALLY	src/include/CDeviceConnection.h	/^                STATUS_CLOSED_NORMALLY, 	\/* Tried to open, but failed *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
everest::hwdrivers::CDeviceConnection::STATUS_NEVER_OPENED	src/include/CDeviceConnection.h	/^                STATUS_NEVER_OPENED = 1, 	\/* Never opened *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
everest::hwdrivers::CDeviceConnection::STATUS_OPEN	src/include/CDeviceConnection.h	/^                STATUS_OPEN,  				\/* Currently open *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
everest::hwdrivers::CDeviceConnection::STATUS_OPEN_FAILED	src/include/CDeviceConnection.h	/^                STATUS_OPEN_FAILED, 		\/* Tried to open, but failed *\/$/;"	e	enum:everest::hwdrivers::CDeviceConnection::Status
everest::hwdrivers::CDeviceConnection::Status	src/include/CDeviceConnection.h	/^			  enum Status$/;"	g	class:everest::hwdrivers::CDeviceConnection	access:public
everest::hwdrivers::CDeviceConnection::buildStrMap	src/include/CDeviceConnection.h	/^				void buildStrMap(void);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:protected	signature:(void)
everest::hwdrivers::CDeviceConnection::close	src/include/CDeviceConnection.h	/^			  virtual bool close(void) { return false; }$/;"	f	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void)
everest::hwdrivers::CDeviceConnection::getDeviceName	src/include/CDeviceConnection.h	/^			  const char *getDeviceName(void) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void) const
everest::hwdrivers::CDeviceConnection::getOpenMessage	src/include/CDeviceConnection.h	/^			  virtual const char * getOpenMessage(int message_number) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(int message_number)
everest::hwdrivers::CDeviceConnection::getPortName	src/include/CDeviceConnection.h	/^			  const char *getPortName(void) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void) const
everest::hwdrivers::CDeviceConnection::getPortType	src/include/CDeviceConnection.h	/^			  const char *getPortType(void) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void) const
everest::hwdrivers::CDeviceConnection::getStatus	src/include/CDeviceConnection.h	/^			  virtual int getStatus(void) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void)
everest::hwdrivers::CDeviceConnection::getStatusMessage	src/include/CDeviceConnection.h	/^			  const char *getStatusMessage(int message_number) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(int message_number) const
everest::hwdrivers::CDeviceConnection::m_dc_device_name	src/include/CDeviceConnection.h	/^				std::string 	m_dc_device_name;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
everest::hwdrivers::CDeviceConnection::m_dc_port_name	src/include/CDeviceConnection.h	/^				std::string 	m_dc_port_name;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
everest::hwdrivers::CDeviceConnection::m_dc_port_type	src/include/CDeviceConnection.h	/^				std::string 	m_dc_port_type;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
everest::hwdrivers::CDeviceConnection::m_str_map	src/include/CDeviceConnection.h	/^				static CStrMap 	m_str_map;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
everest::hwdrivers::CDeviceConnection::m_str_map_inited	src/include/CDeviceConnection.h	/^				static bool 	m_str_map_inited;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
everest::hwdrivers::CDeviceConnection::openSimple	src/include/CDeviceConnection.h	/^			  virtual bool openSimple(void) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void)
everest::hwdrivers::CDeviceConnection::read	src/include/CDeviceConnection.h	/^			  virtual int read(const char *data, unsigned int size,$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(const char *data, unsigned int size, unsigned int ms_wait = 0)
everest::hwdrivers::CDeviceConnection::setDeviceName	src/include/CDeviceConnection.h	/^			  void setDeviceName(const char *device_name);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(const char *device_name)
everest::hwdrivers::CDeviceConnection::setPortName	src/include/CDeviceConnection.h	/^				void setPortName(const char *port_name);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:protected	signature:(const char *port_name)
everest::hwdrivers::CDeviceConnection::setPortType	src/include/CDeviceConnection.h	/^				void setPortType(const char *port_type);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:protected	signature:(const char *port_type)
everest::hwdrivers::CDeviceConnection::write	src/include/CDeviceConnection.h	/^			  virtual int write(const char *data, unsigned int size) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(const char *data, unsigned int size)
everest::hwdrivers::CDeviceConnection::~CDeviceConnection	src/include/CDeviceConnection.h	/^			  virtual ~CDeviceConnection();$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:()
everest::hwdrivers::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^	    class CLidarPacket$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^	    class CLidarPacket$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CLidarPacket	src/include/CLidarPacket.h	/^	    class CLidarPacket$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CLidarPacket::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                CLidarPacket();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                CLidarPacket();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::CLidarPacket	src/include/CLidarPacket.h	/^                CLidarPacket();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::TParams	src/include/CLidarPacket.h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::TParams::TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacket::TParams	access:public	signature:()
everest::hwdrivers::CLidarPacket::TParams::TParams	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacket::TParams	access:public	signature:()
everest::hwdrivers::CLidarPacket::TParams::TParams	src/include/CLidarPacket.h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacket::TParams	access:public	signature:()
everest::hwdrivers::CLidarPacket::TParams::buf_size	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                    u16 buf_size;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
everest::hwdrivers::CLidarPacket::TParams::buf_size	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                    u16 buf_size;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
everest::hwdrivers::CLidarPacket::TParams::buf_size	src/include/CLidarPacket.h	/^                    u16 buf_size;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
everest::hwdrivers::CLidarPacket::TParams::least_packet_len	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                    u16 least_packet_len;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
everest::hwdrivers::CLidarPacket::TParams::least_packet_len	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                    u16 least_packet_len;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
everest::hwdrivers::CLidarPacket::TParams::least_packet_len	src/include/CLidarPacket.h	/^                    u16 least_packet_len;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
everest::hwdrivers::CLidarPacket::bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static s16 bufToByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static s16 bufToByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToByte2	src/include/CLidarPacket.h	/^                static s16 bufToByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static u8 bufToUByte(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToUByte	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static u8 bufToUByte(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToUByte	src/include/CLidarPacket.h	/^                static u8 bufToUByte(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static u16 bufToUByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToUByte2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static u16 bufToUByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufToUByte2	src/include/CLidarPacket.h	/^                static u16 bufToUByte2(u8 *src_ptr);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *src_ptr)
everest::hwdrivers::CLidarPacket::bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                static void bufferToData(void *dest_ptr, void *src_ptr, size_t length);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(void *dest_ptr, void *src_ptr, size_t length)
everest::hwdrivers::CLidarPacket::bufferToData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                static void bufferToData(void *dest_ptr, void *src_ptr, size_t length);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(void *dest_ptr, void *src_ptr, size_t length)
everest::hwdrivers::CLidarPacket::bufferToData	src/include/CLidarPacket.h	/^                static void bufferToData(void *dest_ptr, void *src_ptr, size_t length);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(void *dest_ptr, void *src_ptr, size_t length)
everest::hwdrivers::CLidarPacket::calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				u16 calcCheckSum(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
everest::hwdrivers::CLidarPacket::calcCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^				u16 calcCheckSum(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
everest::hwdrivers::CLidarPacket::calcCheckSum	src/include/CLidarPacket.h	/^				u16 calcCheckSum(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
everest::hwdrivers::CLidarPacket::calcCheckSum_Xor	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				u16 calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
everest::hwdrivers::CLidarPacket::calcCheckSum_Xor	src/include/CLidarPacket.h	/^				u16 calcCheckSum_Xor(u8 *start_bytes, u16 num_bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 *start_bytes, u16 num_bytes)
everest::hwdrivers::CLidarPacket::getAddressCode	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8 getAddressCode() const { return isValid()? m_buf[3]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getBufPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8* getBufPtr() { return &m_buf[0]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:private	signature:()
everest::hwdrivers::CLidarPacket::getBufPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8* getBufPtr() { return &m_buf[0]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:private	signature:()
everest::hwdrivers::CLidarPacket::getBufPtr	src/include/CLidarPacket.h	/^                u8* getBufPtr() { return &m_buf[0]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:private	signature:()
everest::hwdrivers::CLidarPacket::getCommandID	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8 getCommandID() const { return isValid()? m_buf[5]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getCommandID	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8 getCommandID() const { return isValid()? m_buf[5]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getCommandID	src/include/CLidarPacket.h	/^                u8 getCommandID() const { return isValid()? m_buf[5]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getFrameType	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8 getFrameType() const { return isValid()? m_buf[4]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getFrameType	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8 getFrameType() const { return isValid()? m_buf[4]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getFrameType	src/include/CLidarPacket.h	/^                u8 getFrameType() const { return isValid()? m_buf[4]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16 getParamLength();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16 getParamLength();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::getParamLength	src/include/CLidarPacket.h	/^                u16 getParamLength();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::getParamPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8* getParamPtr() {return isValid()? (&m_buf[8]): NULL; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::getParamPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8* getParamPtr() {return isValid()? (&m_buf[8]): NULL; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::getParamPtr	src/include/CLidarPacket.h	/^                u8* getParamPtr() {return isValid()? (&m_buf[8]): NULL; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::getPrototypeCode	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8 getPrototypeCode() const { return isValid()? m_buf[3]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getPrototypeCode	src/include/CLidarPacket.h	/^                u8 getPrototypeCode() const { return m_buf[3]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getSize	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16 getSize() const { return m_length; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getSize	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16 getSize() const { return m_length; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::getSize	src/include/CLidarPacket.h	/^                u16 getSize() const { return m_length; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				bool hasWriteCapacity(int bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(int bytes)
everest::hwdrivers::CLidarPacket::hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^				bool hasWriteCapacity(int bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(int bytes)
everest::hwdrivers::CLidarPacket::hasWriteCapacity	src/include/CLidarPacket.h	/^				bool hasWriteCapacity(int bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(int bytes)
everest::hwdrivers::CLidarPacket::isEmpty	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                bool isEmpty() { return m_length == 0? true: false; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::isEmpty	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                bool isEmpty() { return m_length == 0? true: false; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::isEmpty	src/include/CLidarPacket.h	/^                bool isEmpty() { return m_length == 0? true: false; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::isValid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                bool isValid() const { return m_valid; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::isValid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                bool isValid() const { return m_valid; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::isValid	src/include/CLidarPacket.h	/^                bool isValid() const { return m_valid; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
everest::hwdrivers::CLidarPacket::m_buf	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                std::vector<u8>    m_buf;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_buf	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                std::vector<u8>    m_buf;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_buf	src/include/CLidarPacket.h	/^                std::vector<u8>    m_buf;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16                m_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16                m_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_length	src/include/CLidarPacket.h	/^                u16                m_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_params	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                TParams            m_params;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_params	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                TParams            m_params;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_params	src/include/CLidarPacket.h	/^                TParams            m_params;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_read_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16                m_read_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_read_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16                m_read_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_read_length	src/include/CLidarPacket.h	/^                u16                m_read_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_valid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                bool               m_valid;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_valid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                bool               m_valid;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::m_valid	src/include/CLidarPacket.h	/^                bool               m_valid;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
everest::hwdrivers::CLidarPacket::printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                void printHex();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                void printHex();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::printHex	src/include/CLidarPacket.h	/^                void printHex();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                void pushBack(u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ch)
everest::hwdrivers::CLidarPacket::pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                void pushBack(u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ch)
everest::hwdrivers::CLidarPacket::pushBack	src/include/CLidarPacket.h	/^                void pushBack(u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ch)
everest::hwdrivers::CLidarPacket::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::reset	src/include/CLidarPacket.h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				bool verifyCheckSum(u8 ProtoType);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ProtoType)
everest::hwdrivers::CLidarPacket::verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^				bool verifyCheckSum();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::verifyCheckSum	src/include/CLidarPacket.h	/^				bool verifyCheckSum(u8 ProtoType);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ProtoType)
everest::hwdrivers::CLidarPacket::~CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                ~CLidarPacket() { }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::~CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                ~CLidarPacket() { }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacket::~CLidarPacket	src/include/CLidarPacket.h	/^                ~CLidarPacket() { }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
everest::hwdrivers::CLidarPacketReceiver	src/include/CLidarPacketReceiver.h	/^		class CLidarPacketReceiver$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CLidarPacketReceiver::CLidarPacketReceiver	src/include/CLidarPacketReceiver.h	/^                CLidarPacketReceiver();$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:()
everest::hwdrivers::CLidarPacketReceiver::PACKET_FAILED	src/include/CLidarPacketReceiver.h	/^                    PACKET_FAILED$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TPacketResult
everest::hwdrivers::CLidarPacketReceiver::PACKET_ING	src/include/CLidarPacketReceiver.h	/^                    PACKET_ING = 0,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TPacketResult
everest::hwdrivers::CLidarPacketReceiver::PACKET_SUCCESS	src/include/CLidarPacketReceiver.h	/^                    PACKET_SUCCESS,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TPacketResult
everest::hwdrivers::CLidarPacketReceiver::STATE_ACQUIRE_DATA	src/include/CLidarPacketReceiver.h	/^                    STATE_ACQUIRE_DATA$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
everest::hwdrivers::CLidarPacketReceiver::STATE_HEADER1	src/include/CLidarPacketReceiver.h	/^                    STATE_HEADER1 = 0,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
everest::hwdrivers::CLidarPacketReceiver::STATE_HEADER2	src/include/CLidarPacketReceiver.h	/^                    STATE_HEADER2,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
everest::hwdrivers::CLidarPacketReceiver::STATE_LENGHT	src/include/CLidarPacketReceiver.h	/^                    STATE_LENGHT,$/;"	e	enum:everest::hwdrivers::CLidarPacketReceiver::TState
everest::hwdrivers::CLidarPacketReceiver::TPacketResult	src/include/CLidarPacketReceiver.h	/^                enum TPacketResult$/;"	g	class:everest::hwdrivers::CLidarPacketReceiver	access:public
everest::hwdrivers::CLidarPacketReceiver::TParams	src/include/CLidarPacketReceiver.h	/^                struct TParams$/;"	s	class:everest::hwdrivers::CLidarPacketReceiver	access:public
everest::hwdrivers::CLidarPacketReceiver::TParams::TParams	src/include/CLidarPacketReceiver.h	/^                    TParams()$/;"	f	struct:everest::hwdrivers::CLidarPacketReceiver::TParams	access:public	signature:()
everest::hwdrivers::CLidarPacketReceiver::TParams::packet_max_time_ms	src/include/CLidarPacketReceiver.h	/^                    size_t packet_max_time_ms;$/;"	m	struct:everest::hwdrivers::CLidarPacketReceiver::TParams	access:public
everest::hwdrivers::CLidarPacketReceiver::TParams::packet_wait_time_ms	src/include/CLidarPacketReceiver.h	/^                    size_t packet_wait_time_ms;$/;"	m	struct:everest::hwdrivers::CLidarPacketReceiver::TParams	access:public
everest::hwdrivers::CLidarPacketReceiver::TState	src/include/CLidarPacketReceiver.h	/^                enum TState$/;"	g	class:everest::hwdrivers::CLidarPacketReceiver	access:public
everest::hwdrivers::CLidarPacketReceiver::enableLogWhenReceiveTimeOvers	src/include/CLidarPacketReceiver.h	/^                void enableLogWhenReceiveTimeOvers(bool state) {m_log_when_receive_time_over = state;}$/;"	f	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(bool state)
everest::hwdrivers::CLidarPacketReceiver::getDeviceConnection	src/include/CLidarPacketReceiver.h	/^				CDeviceConnection *getDeviceConnection(void)  { return m_device_conn; }$/;"	f	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(void)
everest::hwdrivers::CLidarPacketReceiver::m_actual_count	src/include/CLidarPacketReceiver.h	/^                int                 m_actual_count;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_count_down	src/include/CLidarPacketReceiver.h	/^                CCountDown          m_count_down;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_counter	src/include/CLidarPacketReceiver.h	/^                size_t              m_counter;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_device_conn	src/include/CLidarPacketReceiver.h	/^                CDeviceConnection 	*m_device_conn;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_log_when_receive_time_over	src/include/CLidarPacketReceiver.h	/^                bool                m_log_when_receive_time_over;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_packet_length	src/include/CLidarPacketReceiver.h	/^                int                 m_packet_length;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_params	src/include/CLidarPacketReceiver.h	/^                TParams             m_params;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_save_fp	src/include/CLidarPacketReceiver.h	/^                std::ofstream       m_save_fp;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::m_state	src/include/CLidarPacketReceiver.h	/^                TState              m_state;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
everest::hwdrivers::CLidarPacketReceiver::processStateAcquireData	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateAcquireData(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
everest::hwdrivers::CLidarPacketReceiver::processStateHeader1	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateHeader1(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
everest::hwdrivers::CLidarPacketReceiver::processStateHeader2	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateHeader2(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
everest::hwdrivers::CLidarPacketReceiver::processStateLength	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateLength(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
everest::hwdrivers::CLidarPacketReceiver::readPacket	src/include/CLidarPacketReceiver.h	/^				TPacketResult readPacket(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
everest::hwdrivers::CLidarPacketReceiver::receivePacket	src/include/CLidarPacketReceiver.h	/^                bool receivePacket(CLidarPacket *packet);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(CLidarPacket *packet)
everest::hwdrivers::CLidarPacketReceiver::reset	src/include/CLidarPacketReceiver.h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:()
everest::hwdrivers::CLidarPacketReceiver::setDeviceConnection	src/include/CLidarPacketReceiver.h	/^				void setDeviceConnection(CDeviceConnection *device_connection) { m_device_conn = device_connection; }$/;"	f	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(CDeviceConnection *device_connection)
everest::hwdrivers::CLidarPacketReceiver::~CLidarPacketReceiver	src/include/CLidarPacketReceiver.h	/^                ~CLidarPacketReceiver();$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:()
everest::hwdrivers::CLidarUnpacket	src/include/CLidarUnpacket.h	/^		class CLidarUnpacket$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CLidarUnpacket::CLidarUnpacket	src/include/CLidarUnpacket.h	/^                CLidarUnpacket();$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:()
everest::hwdrivers::CLidarUnpacket::unpacketHealthInfo	src/include/CLidarUnpacket.h	/^                static TLidarError unpacketHealthInfo(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
everest::hwdrivers::CLidarUnpacket::unpacketLidarScan	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketLidarScan(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
everest::hwdrivers::CLidarUnpacket::unpacketLidarScan2	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketLidarScan2(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
everest::hwdrivers::CLidarUnpacket::unpacketLidarSpeed	src/include/CLidarUnpacket.h	/^                static int unpacketLidarSpeed(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
everest::hwdrivers::CLidarUnpacket::unpacketNewLidarScanHasSingal	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketNewLidarScanHasSingal(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
everest::hwdrivers::CLidarUnpacket::unpacketNewLidarScanNoSingal	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketNewLidarScanNoSingal(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
everest::hwdrivers::CLidarUnpacket::~CLidarUnpacket	src/include/CLidarUnpacket.h	/^                ~CLidarUnpacket();$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:()
everest::hwdrivers::CSerialConnection	src/include/CSerialConnection.h	/^		class CSerialConnection: public CDeviceConnection$/;"	c	namespace:everest::hwdrivers	inherits:CDeviceConnection
everest::hwdrivers::CSerialConnection::CSerialConnection	src/include/CSerialConnection.h	/^				CSerialConnection();$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:()
everest::hwdrivers::CSerialConnection::OPEN_ALREADY_OPEN	src/include/CSerialConnection.h	/^					OPEN_ALREADY_OPEN 				\/* Connection was already open *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
everest::hwdrivers::CSerialConnection::OPEN_COULD_NOT_OPEN_PORT	src/include/CSerialConnection.h	/^					OPEN_COULD_NOT_OPEN_PORT = 1,  	\/* Could not open the port *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
everest::hwdrivers::CSerialConnection::OPEN_COULD_NOT_SET_BAUD	src/include/CSerialConnection.h	/^					OPEN_COULD_NOT_SET_BAUD, 		\/* Baud rate valid, but could not set it *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
everest::hwdrivers::CSerialConnection::OPEN_COULD_NOT_SET_UP_PORT	src/include/CSerialConnection.h	/^					OPEN_COULD_NOT_SET_UP_PORT, 	\/* Could not set up the port *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
everest::hwdrivers::CSerialConnection::OPEN_INVALID_BAUD_RATE	src/include/CSerialConnection.h	/^					OPEN_INVALID_BAUD_RATE, 		\/* Baud rate is not valid *\/$/;"	e	enum:everest::hwdrivers::CSerialConnection::Open
everest::hwdrivers::CSerialConnection::Open	src/include/CSerialConnection.h	/^				enum Open$/;"	g	class:everest::hwdrivers::CSerialConnection	access:public
everest::hwdrivers::CSerialConnection::baudToRate	src/include/CSerialConnection.h	/^				int baudToRate(int baud);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:protected	signature:(int baud)
everest::hwdrivers::CSerialConnection::close	src/include/CSerialConnection.h	/^				virtual bool close(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::closeSerial	src/include/CSerialConnection.h	/^				void closeSerial();$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:()
everest::hwdrivers::CSerialConnection::getBaud	src/include/CSerialConnection.h	/^				int getBaud(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getCTS	src/include/CSerialConnection.h	/^				bool getCTS(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getDCD	src/include/CSerialConnection.h	/^				bool getDCD(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getDSR	src/include/CSerialConnection.h	/^				bool getDSR(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getHardwareControl	src/include/CSerialConnection.h	/^				bool getHardwareControl(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getOpenMessage	src/include/CSerialConnection.h	/^				virtual const char * getOpenMessage(int messageNumber);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(int messageNumber)
everest::hwdrivers::CSerialConnection::getPort	src/include/CSerialConnection.h	/^				const char * getPort(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getRing	src/include/CSerialConnection.h	/^				bool getRing(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::getStatus	src/include/CSerialConnection.h	/^				virtual int getStatus(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::internalOpen	src/include/CSerialConnection.h	/^				int internalOpen(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::m_baud_rate	src/include/CSerialConnection.h	/^				int 			m_baud_rate;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
everest::hwdrivers::CSerialConnection::m_hardware_control	src/include/CSerialConnection.h	/^				bool 			m_hardware_control;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
everest::hwdrivers::CSerialConnection::m_port	src/include/CSerialConnection.h	/^				int 			m_port;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
everest::hwdrivers::CSerialConnection::m_port_name	src/include/CSerialConnection.h	/^				std::string 	m_port_name;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
everest::hwdrivers::CSerialConnection::m_status	src/include/CSerialConnection.h	/^				int 			m_status;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
everest::hwdrivers::CSerialConnection::m_taking_timestamps	src/include/CSerialConnection.h	/^                bool            m_taking_timestamps;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
everest::hwdrivers::CSerialConnection::open	src/include/CSerialConnection.h	/^				int open(const char * port = NULL);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char * port = NULL)
everest::hwdrivers::CSerialConnection::openSimple	src/include/CSerialConnection.h	/^				virtual bool openSimple(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
everest::hwdrivers::CSerialConnection::rateToBaud	src/include/CSerialConnection.h	/^				int rateToBaud(int rate);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:protected	signature:(int rate)
everest::hwdrivers::CSerialConnection::read	src/include/CSerialConnection.h	/^				virtual int read(const char *data, unsigned int size, unsigned int msWait = 0);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char *data, unsigned int size, unsigned int msWait = 0)
everest::hwdrivers::CSerialConnection::setBaud	src/include/CSerialConnection.h	/^				bool setBaud(int baud);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(int baud)
everest::hwdrivers::CSerialConnection::setHardwareControl	src/include/CSerialConnection.h	/^				bool setHardwareControl(bool hardwareControl);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(bool hardwareControl)
everest::hwdrivers::CSerialConnection::setPort	src/include/CSerialConnection.h	/^				void setPort(const char *port = NULL);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char *port = NULL)
everest::hwdrivers::CSerialConnection::set_opt	src/include/CSerialConnection.h	/^				int set_opt(int fd,int nSpeed, int nBits, char nEvent, int nStop);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(int fd,int nSpeed, int nBits, char nEvent, int nStop)
everest::hwdrivers::CSerialConnection::startTimeStamping	src/include/CSerialConnection.h	/^				void startTimeStamping(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:protected	signature:(void)
everest::hwdrivers::CSerialConnection::write	src/include/CSerialConnection.h	/^				virtual int write(const char *data, unsigned int size);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char *data, unsigned int size)
everest::hwdrivers::CSerialConnection::~CSerialConnection	src/include/CSerialConnection.h	/^				virtual ~CSerialConnection();$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:()
everest::hwdrivers::CSimulateSerial	src/include/CSimulateSerial.h	/^		class CSimulateSerial: public CDeviceConnection$/;"	c	namespace:everest::hwdrivers	inherits:CDeviceConnection
everest::hwdrivers::CSimulateSerial::CSimulateSerial	src/include/CSimulateSerial.h	/^				CSimulateSerial();$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:()
everest::hwdrivers::CSimulateSerial::OPEN_ALREADY_OPEN	src/include/CSimulateSerial.h	/^					OPEN_ALREADY_OPEN 				\/* Connection was already open *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
everest::hwdrivers::CSimulateSerial::OPEN_COULD_NOT_OPEN_PORT	src/include/CSimulateSerial.h	/^					OPEN_COULD_NOT_OPEN_PORT = 1,  	\/* Could not open the port *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
everest::hwdrivers::CSimulateSerial::OPEN_COULD_NOT_SET_BAUD	src/include/CSimulateSerial.h	/^					OPEN_COULD_NOT_SET_BAUD, 		\/* Baud rate valid, but could not set it *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
everest::hwdrivers::CSimulateSerial::OPEN_COULD_NOT_SET_UP_PORT	src/include/CSimulateSerial.h	/^					OPEN_COULD_NOT_SET_UP_PORT, 	\/* Could not set up the port *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
everest::hwdrivers::CSimulateSerial::OPEN_INVALID_BAUD_RATE	src/include/CSimulateSerial.h	/^					OPEN_INVALID_BAUD_RATE, 		\/* Baud rate is not valid *\/$/;"	e	enum:everest::hwdrivers::CSimulateSerial::Open
everest::hwdrivers::CSimulateSerial::Open	src/include/CSimulateSerial.h	/^				enum Open$/;"	g	class:everest::hwdrivers::CSimulateSerial	access:public
everest::hwdrivers::CSimulateSerial::baudToRate	src/include/CSimulateSerial.h	/^				int baudToRate(int baud);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:protected	signature:(int baud)
everest::hwdrivers::CSimulateSerial::close	src/include/CSimulateSerial.h	/^				virtual bool close(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
everest::hwdrivers::CSimulateSerial::getBaud	src/include/CSimulateSerial.h	/^				int getBaud(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
everest::hwdrivers::CSimulateSerial::getOpenMessage	src/include/CSimulateSerial.h	/^				virtual const char* getOpenMessage(int messageNumber) { return m_str_map[messageNumber].c_str(); }$/;"	f	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(int messageNumber)
everest::hwdrivers::CSimulateSerial::getPort	src/include/CSimulateSerial.h	/^				const char* getPort(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
everest::hwdrivers::CSimulateSerial::getStatus	src/include/CSimulateSerial.h	/^				virtual int getStatus(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
everest::hwdrivers::CSimulateSerial::internalOpen	src/include/CSimulateSerial.h	/^				int internalOpen(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
everest::hwdrivers::CSimulateSerial::m_baud_rate	src/include/CSimulateSerial.h	/^				int 			m_baud_rate;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
everest::hwdrivers::CSimulateSerial::m_fp	src/include/CSimulateSerial.h	/^				std::ifstream   m_fp;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
everest::hwdrivers::CSimulateSerial::m_port_name	src/include/CSimulateSerial.h	/^				std::string 	m_port_name;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
everest::hwdrivers::CSimulateSerial::m_status	src/include/CSimulateSerial.h	/^				int 			m_status;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
everest::hwdrivers::CSimulateSerial::m_str_map	src/include/CSimulateSerial.h	/^                CStrMap 		m_str_map;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
everest::hwdrivers::CSimulateSerial::open	src/include/CSimulateSerial.h	/^				int open(const char * port = NULL);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char * port = NULL)
everest::hwdrivers::CSimulateSerial::openSimple	src/include/CSimulateSerial.h	/^				virtual bool openSimple(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
everest::hwdrivers::CSimulateSerial::rateToBaud	src/include/CSimulateSerial.h	/^				int rateToBaud(int rate);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:protected	signature:(int rate)
everest::hwdrivers::CSimulateSerial::read	src/include/CSimulateSerial.h	/^				virtual int read(const char *data, unsigned int size, unsigned int msWait = 0);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char *data, unsigned int size, unsigned int msWait = 0)
everest::hwdrivers::CSimulateSerial::setBaud	src/include/CSimulateSerial.h	/^				bool setBaud(int baud);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(int baud)
everest::hwdrivers::CSimulateSerial::setPort	src/include/CSimulateSerial.h	/^				void setPort(const char *port = NULL);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char *port = NULL)
everest::hwdrivers::CSimulateSerial::startTimeStamping	src/include/CSimulateSerial.h	/^				void startTimeStamping(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:protected	signature:(void)
everest::hwdrivers::CSimulateSerial::write	src/include/CSimulateSerial.h	/^				virtual int write(const char *data, unsigned int size);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char *data, unsigned int size)
everest::hwdrivers::CSimulateSerial::~CSimulateSerial	src/include/CSimulateSerial.h	/^				virtual ~CSimulateSerial();$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:()
everest::hwdrivers::CStrMap	src/include/CDeviceConnection.h	/^		typedef std::map<int, std::string> CStrMap;$/;"	t	namespace:everest::hwdrivers
everest::hwdrivers::CTime	src/include/CTime.h	/^        class CTime$/;"	c	namespace:everest::hwdrivers
everest::hwdrivers::CTime::CTime	src/include/CTime.h	/^                CTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
everest::hwdrivers::CTime::addTime	src/include/CTime.h	/^                static TTimeStamp addTime(TTimeStamp time, double time_ms);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:(TTimeStamp time, double time_ms)
everest::hwdrivers::CTime::getCpuTime	src/include/CTime.h	/^                static TTimeStamp getCpuTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
everest::hwdrivers::CTime::getRealTime	src/include/CTime.h	/^                static TTimeStamp getRealTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
everest::hwdrivers::CTime::getTimeString	src/include/CTime.h	/^                static std::string getTimeString();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
everest::hwdrivers::CTime::timeDifference	src/include/CTime.h	/^                static double timeDifference( const TTimeStamp &t1, const TTimeStamp &t2 );$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:( const TTimeStamp &t1, const TTimeStamp &t2 )
everest::hwdrivers::CTime::timeToString	src/include/CTime.h	/^                static std::string timeToString(TTimeStamp &time);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:(TTimeStamp &time)
everest::hwdrivers::CTime::time_tToTimestamp	src/include/CTime.h	/^                static TTimeStamp time_tToTimestamp(const time_t &t);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:(const time_t &t)
everest::hwdrivers::CTime::timestampToParts	src/include/CTime.h	/^                static void timestampToParts( TTimeStamp t, TTimeParts &p , bool localTime);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:( TTimeStamp t, TTimeParts &p , bool localTime)
everest::hwdrivers::CTime::timestampTotime_t	src/include/CTime.h	/^                static double timestampTotime_t( const TTimeStamp  &t );$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:( const TTimeStamp &t )
everest::hwdrivers::CTime::~CTime	src/include/CTime.h	/^                ~CTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
everest::hwdrivers::I3LIDAR_DISTANCE	src/include/C3iroboticsLidar.h	/^            I3LIDAR_DISTANCE = 0xA9,$/;"	e	enum:everest::hwdrivers::TLidarCommandID
everest::hwdrivers::I3LIDAR_HEALTH	src/include/C3iroboticsLidar.h	/^            I3LIDAR_HEALTH   = 0xAB,$/;"	e	enum:everest::hwdrivers::TLidarCommandID
everest::hwdrivers::I3LIDAR_LIDAR_SPEED	src/include/C3iroboticsLidar.h	/^            I3LIDAR_LIDAR_SPEED  = 0xAE,$/;"	e	enum:everest::hwdrivers::TLidarCommandID
everest::hwdrivers::I3LIDAR_NEW_DISTANCE	src/include/C3iroboticsLidar.h	/^            I3LIDAR_NEW_DISTANCE = 0xAD$/;"	e	enum:everest::hwdrivers::TLidarCommandID
everest::hwdrivers::LIDAR_ERROR_CALIBRATION_PARAMS	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_CALIBRATION_PARAMS,$/;"	e	enum:everest::hwdrivers::TLidarError
everest::hwdrivers::LIDAR_ERROR_CCD	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_CCD,$/;"	e	enum:everest::hwdrivers::TLidarError
everest::hwdrivers::LIDAR_ERROR_LD_OPTICAL_POWER_PARAMS	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_LD_OPTICAL_POWER_PARAMS,$/;"	e	enum:everest::hwdrivers::TLidarError
everest::hwdrivers::LIDAR_ERROR_NONE	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_NONE = 0,$/;"	e	enum:everest::hwdrivers::TLidarError
everest::hwdrivers::LIDAR_ERROR_UNKNOW	src/include/CLidarUnpacket.h	/^            LIDAR_ERROR_UNKNOW$/;"	e	enum:everest::hwdrivers::TLidarError
everest::hwdrivers::LIDAR_GRAB_ELSE	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_ELSE$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
everest::hwdrivers::LIDAR_GRAB_ERRO	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_ERRO,$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
everest::hwdrivers::LIDAR_GRAB_ING	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_ING = 0,$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
everest::hwdrivers::LIDAR_GRAB_SUCESS	src/include/C3iroboticsLidar.h	/^            LIDAR_GRAB_SUCESS,$/;"	e	enum:everest::hwdrivers::TLidarGrabResult
everest::hwdrivers::TLidarCommandID	src/include/C3iroboticsLidar.h	/^        enum TLidarCommandID$/;"	g	namespace:everest::hwdrivers
everest::hwdrivers::TLidarError	src/include/CLidarUnpacket.h	/^        enum TLidarError$/;"	g	namespace:everest::hwdrivers
everest::hwdrivers::TLidarGrabResult	src/include/C3iroboticsLidar.h	/^        enum TLidarGrabResult$/;"	g	namespace:everest::hwdrivers
everest::hwdrivers::TLidarScan	src/include/C3iroboticsLidar.h	/^	    struct TLidarScan$/;"	s	namespace:everest::hwdrivers
everest::hwdrivers::TLidarScan::TLidarScan	src/include/C3iroboticsLidar.h	/^	        TLidarScan() : angle(), distance(), signal(){ }$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:()
everest::hwdrivers::TLidarScan::angle	src/include/C3iroboticsLidar.h	/^	        std::vector<float> angle;$/;"	m	struct:everest::hwdrivers::TLidarScan	access:public
everest::hwdrivers::TLidarScan::clear	src/include/C3iroboticsLidar.h	/^	        void clear()$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:()
everest::hwdrivers::TLidarScan::distance	src/include/C3iroboticsLidar.h	/^	        std::vector<float> distance;$/;"	m	struct:everest::hwdrivers::TLidarScan	access:public
everest::hwdrivers::TLidarScan::getSize	src/include/C3iroboticsLidar.h	/^            size_t getSize() {return angle.size();}$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:()
everest::hwdrivers::TLidarScan::insert	src/include/C3iroboticsLidar.h	/^	        void insert(TLidarScan &scan)$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:(TLidarScan &scan)
everest::hwdrivers::TLidarScan::signal	src/include/C3iroboticsLidar.h	/^	        std::vector<int>   signal;$/;"	m	struct:everest::hwdrivers::TLidarScan	access:public
everest::hwdrivers::TTimeParts	src/include/CTime.h	/^		struct TTimeParts$/;"	s	namespace:everest::hwdrivers
everest::hwdrivers::TTimeParts::day	src/include/CTime.h	/^			uint8_t		day;    \/** Day (1-31) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::day_of_week	src/include/CTime.h	/^			uint8_t		day_of_week; \/** Day of week (1:Sunday, 7:Saturday) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::daylight_saving	src/include/CTime.h	/^			int			daylight_saving;$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::hour	src/include/CTime.h	/^			uint8_t		hour;   \/** Hour (0-23) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::minute	src/include/CTime.h	/^			uint8_t		minute; \/** Minute (0-59) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::month	src/include/CTime.h	/^			uint8_t		month;  \/** Month (1-12) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::second	src/include/CTime.h	/^			double		second; \/** Seconds (0.0000-59.9999) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeParts::year	src/include/CTime.h	/^			uint16_t	year;	\/** The year *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
everest::hwdrivers::TTimeStamp	src/include/CTime.h	/^        typedef uint64_t TTimeStamp;$/;"	t	namespace:everest::hwdrivers
everest::hwdrivers::TToothScan	src/include/CLidarUnpacket.h	/^	    struct TToothScan$/;"	s	namespace:everest::hwdrivers
everest::hwdrivers::TToothScan::TToothScan	src/include/CLidarUnpacket.h	/^            TToothScan() : offset_valid(false), offset_angle(0.0), lidar_speed(-1.0), angle(0.0), distance(), signal(){ }$/;"	f	struct:everest::hwdrivers::TToothScan	access:public	signature:()
everest::hwdrivers::TToothScan::angle	src/include/CLidarUnpacket.h	/^            float                 angle;            \/\/ unit: degree$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
everest::hwdrivers::TToothScan::distance	src/include/CLidarUnpacket.h	/^            std::vector<float>    distance;         \/\/ unit: meter$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
everest::hwdrivers::TToothScan::getAngle	src/include/CLidarUnpacket.h	/^            float getAngle() { return angle; }$/;"	f	struct:everest::hwdrivers::TToothScan	access:public	signature:()
everest::hwdrivers::TToothScan::getSize	src/include/CLidarUnpacket.h	/^            size_t getSize() { return distance.size(); }$/;"	f	struct:everest::hwdrivers::TToothScan	access:public	signature:()
everest::hwdrivers::TToothScan::lidar_speed	src/include/CLidarUnpacket.h	/^            float                 lidar_speed;      \/\/ unit: lidar speed$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
everest::hwdrivers::TToothScan::offset_angle	src/include/CLidarUnpacket.h	/^            float                 offset_angle;     \/\/ unit: degree$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
everest::hwdrivers::TToothScan::offset_valid	src/include/CLidarUnpacket.h	/^            bool                  offset_valid;$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
everest::hwdrivers::TToothScan::signal	src/include/CLidarUnpacket.h	/^            std::vector<int>      signal;           \/\/ range: 0 - 255$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
format	src/include/CLogUtitls.h	/^static std::string format(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
getAddressCode	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8 getAddressCode() const { return isValid()? m_buf[3]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getAngle	src/include/CLidarUnpacket.h	/^            float getAngle() { return angle; }$/;"	f	struct:everest::hwdrivers::TToothScan	access:public	signature:()
getBaud	src/include/CSerialConnection.h	/^				int getBaud(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getBaud	src/include/CSimulateSerial.h	/^				int getBaud(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
getBaud	src/src/CSerialConnection.cpp	/^int CSerialConnection::getBaud(void)$/;"	f	class:CSerialConnection	signature:(void)
getBaud	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::getBaud(void)$/;"	f	class:CSimulateSerial	signature:(void)
getBufPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8* getBufPtr() { return &m_buf[0]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:private	signature:()
getBufPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8* getBufPtr() { return &m_buf[0]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:private	signature:()
getBufPtr	src/include/CLidarPacket.h	/^                u8* getBufPtr() { return &m_buf[0]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:private	signature:()
getCTS	src/include/CSerialConnection.h	/^				bool getCTS(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getCTS	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getCTS(void)$/;"	f	class:CSerialConnection	signature:(void)
getCommandID	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8 getCommandID() const { return isValid()? m_buf[5]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getCommandID	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8 getCommandID() const { return isValid()? m_buf[5]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getCommandID	src/include/CLidarPacket.h	/^                u8 getCommandID() const { return isValid()? m_buf[5]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getCpuTime	src/include/CTime.h	/^                static TTimeStamp getCpuTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
getCpuTime	src/src/CTime.cpp	/^TTimeStamp CTime::getCpuTime()$/;"	f	class:CTime	signature:()
getDCD	src/include/CSerialConnection.h	/^				bool getDCD(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getDCD	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getDCD(void)$/;"	f	class:CSerialConnection	signature:(void)
getDSR	src/include/CSerialConnection.h	/^				bool getDSR(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getDSR	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getDSR(void)$/;"	f	class:CSerialConnection	signature:(void)
getDeviceConnection	src/include/CLidarPacketReceiver.h	/^				CDeviceConnection *getDeviceConnection(void)  { return m_device_conn; }$/;"	f	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(void)
getDeviceName	src/include/CDeviceConnection.h	/^			  const char *getDeviceName(void) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void) const
getDeviceName	src/src/CDeviceConnection.cpp	/^const char *CDeviceConnection::getDeviceName(void) const$/;"	f	class:CDeviceConnection	signature:(void) const
getFileSize	src/include/CLogUtitls.h	/^static uint64_t getFileSize(const std::string &fileName)$/;"	f	signature:(const std::string &fileName)
getFrameType	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8 getFrameType() const { return isValid()? m_buf[4]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getFrameType	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8 getFrameType() const { return isValid()? m_buf[4]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getFrameType	src/include/CLidarPacket.h	/^                u8 getFrameType() const { return isValid()? m_buf[4]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getHardwareControl	src/include/CSerialConnection.h	/^				bool getHardwareControl(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getHardwareControl	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getHardwareControl(void)$/;"	f	class:CSerialConnection	signature:(void)
getInputTime	src/include/CCountDown.h	/^                double getInputTime() const { return m_time_ms;}$/;"	f	class:everest::hwdrivers::CCountDown	access:public	signature:() const
getLeftMsTime	src/include/CCountDown.h	/^                double getLeftMsTime() const { return getLeftTime() * 1000.0;}$/;"	f	class:everest::hwdrivers::CCountDown	access:public	signature:() const
getLeftTime	src/include/CCountDown.h	/^                double getLeftTime() const;$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:() const
getLeftTime	src/src/CCountDown.cpp	/^double CCountDown::getLeftTime() const$/;"	f	class:CCountDown	signature:() const
getLidarCurrentSpeed	src/include/C3iroboticsLidar.h	/^                double getLidarCurrentSpeed() {return m_current_lidar_speed;}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
getLidarError	src/include/C3iroboticsLidar.h	/^                TLidarError getLidarError() { return m_lidar_erro; }$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
getLidarScan	src/include/C3iroboticsLidar.h	/^                TLidarScan& getLidarScan() { return m_lidar_scan; }$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
getMSec	src/include/CArcTime.h	/^          unsigned long getMSec(void) const { return m_MSec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
getMSecLL	src/include/CArcTime.h	/^          unsigned long long getMSecLL(void) const { return m_MSec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
getOpenMessage	src/include/CDeviceConnection.h	/^			  virtual const char * getOpenMessage(int message_number) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(int message_number)
getOpenMessage	src/include/CSerialConnection.h	/^				virtual const char * getOpenMessage(int messageNumber);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(int messageNumber)
getOpenMessage	src/include/CSimulateSerial.h	/^				virtual const char* getOpenMessage(int messageNumber) { return m_str_map[messageNumber].c_str(); }$/;"	f	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(int messageNumber)
getOpenMessage	src/src/CSerialConnection.cpp	/^const char* CSerialConnection::getOpenMessage(int messageNumber)$/;"	f	class:CSerialConnection	signature:(int messageNumber)
getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16 getParamLength();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16 getParamLength();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
getParamLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
getParamLength	src/include/CLidarPacket.h	/^                u16 getParamLength();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
getParamLength	src/src/CLidarPacket.cpp	/^u16 CLidarPacket::getParamLength()$/;"	f	class:CLidarPacket	signature:()
getParamPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8* getParamPtr() {return isValid()? (&m_buf[8]): NULL; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
getParamPtr	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u8* getParamPtr() {return isValid()? (&m_buf[8]): NULL; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
getParamPtr	src/include/CLidarPacket.h	/^                u8* getParamPtr() {return isValid()? (&m_buf[8]): NULL; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
getPort	src/include/CSerialConnection.h	/^				const char * getPort(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getPort	src/include/CSimulateSerial.h	/^				const char* getPort(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
getPort	src/src/CSerialConnection.cpp	/^const char * CSerialConnection::getPort(void)$/;"	f	class:CSerialConnection	signature:(void)
getPort	src/src/CSimulateSerial.cpp	/^const char * CSimulateSerial::getPort(void)$/;"	f	class:CSimulateSerial	signature:(void)
getPortName	src/include/CDeviceConnection.h	/^			  const char *getPortName(void) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void) const
getPortName	src/src/CDeviceConnection.cpp	/^const char *CDeviceConnection::getPortName(void) const$/;"	f	class:CDeviceConnection	signature:(void) const
getPortType	src/include/CDeviceConnection.h	/^			  const char *getPortType(void) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void) const
getPortType	src/src/CDeviceConnection.cpp	/^const char *CDeviceConnection::getPortType(void) const$/;"	f	class:CDeviceConnection	signature:(void) const
getPrototypeCode	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u8 getPrototypeCode() const { return isValid()? m_buf[3]: 0xFF; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getPrototypeCode	src/include/CLidarPacket.h	/^                u8 getPrototypeCode() const { return m_buf[3]; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getRealTime	src/include/CTime.h	/^                static TTimeStamp getRealTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
getRealTime	src/src/CTime.cpp	/^TTimeStamp CTime::getRealTime()$/;"	f	class:CTime	signature:()
getRing	src/include/CSerialConnection.h	/^				bool getRing(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getRing	src/src/CSerialConnection.cpp	/^bool CSerialConnection::getRing(void)$/;"	f	class:CSerialConnection	signature:(void)
getScanData	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult getScanData();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
getScanData	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::getScanData()$/;"	f	class:C3iroboticsLidar	signature:()
getSec	src/include/CArcTime.h	/^          unsigned long getSec(void) const { return m_Sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
getSecLL	src/include/CArcTime.h	/^          unsigned long long getSecLL(void) const { return m_Sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
getSize	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16 getSize() const { return m_length; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getSize	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16 getSize() const { return m_length; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getSize	src/include/C3iroboticsLidar.h	/^            size_t getSize() {return angle.size();}$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:()
getSize	src/include/CLidarPacket.h	/^                u16 getSize() const { return m_length; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
getSize	src/include/CLidarUnpacket.h	/^            size_t getSize() { return distance.size(); }$/;"	f	struct:everest::hwdrivers::TToothScan	access:public	signature:()
getStatus	src/include/CDeviceConnection.h	/^			  virtual int getStatus(void) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void)
getStatus	src/include/CSerialConnection.h	/^				virtual int getStatus(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
getStatus	src/include/CSimulateSerial.h	/^				virtual int getStatus(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
getStatus	src/src/CSerialConnection.cpp	/^int CSerialConnection::getStatus(void)$/;"	f	class:CSerialConnection	signature:(void)
getStatus	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::getStatus(void)$/;"	f	class:CSimulateSerial	signature:(void)
getStatusMessage	src/include/CDeviceConnection.h	/^			  const char *getStatusMessage(int message_number) const;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(int message_number) const
getStatusMessage	src/src/CDeviceConnection.cpp	/^const char * CDeviceConnection::getStatusMessage(int messageNumber) const$/;"	f	class:CDeviceConnection	signature:(int messageNumber) const
getTimeString	src/include/CTime.h	/^                static std::string getTimeString();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
getTimeString	src/src/CTime.cpp	/^std::string CTime::getTimeString()$/;"	f	class:CTime	signature:()
grabFirstScan	src/include/C3iroboticsLidar.h	/^                TLidarGrabResult grabFirstScan(TToothScan &tooth_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan)
grabFirstScan	src/src/C3iroboticsLidar.cpp	/^TLidarGrabResult C3iroboticsLidar::grabFirstScan(TToothScan &tooth_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan)
hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				bool hasWriteCapacity(int bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(int bytes)
hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^				bool hasWriteCapacity(int bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(int bytes)
hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
hasWriteCapacity	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
hasWriteCapacity	src/include/CLidarPacket.h	/^				bool hasWriteCapacity(int bytes);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(int bytes)
hasWriteCapacity	src/src/CLidarPacket.cpp	/^bool CLidarPacket::hasWriteCapacity(int bytes)$/;"	f	class:CLidarPacket	signature:(int bytes)
hour	src/include/CTime.h	/^			uint8_t		hour;   \/** Hour (0-23) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
hwdrivers	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/C3iroboticsLidar.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CArcTime.h	/^    namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CCountDown.h	/^    namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CDeviceConnection.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CLidarPacket.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CLidarPacketReceiver.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CLidarUnpacket.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CSerialConnection.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CSimulateSerial.h	/^	namespace hwdrivers$/;"	n	namespace:everest
hwdrivers	src/include/CTime.h	/^    namespace hwdrivers$/;"	n	namespace:everest
info_arch	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
initilize	src/include/C3iroboticsLidar.h	/^                bool initilize(CDeviceConnection *device_connect);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:(CDeviceConnection *device_connect)
initilize	src/src/C3iroboticsLidar.cpp	/^bool C3iroboticsLidar::initilize(CDeviceConnection *device_connect)$/;"	f	class:C3iroboticsLidar	signature:(CDeviceConnection *device_connect)
insert	src/include/C3iroboticsLidar.h	/^	        void insert(TLidarScan &scan)$/;"	f	struct:everest::hwdrivers::TLidarScan	access:public	signature:(TLidarScan &scan)
internalOpen	src/include/CSerialConnection.h	/^				int internalOpen(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
internalOpen	src/include/CSimulateSerial.h	/^				int internalOpen(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
internalOpen	src/src/CSerialConnection.cpp	/^int CSerialConnection::internalOpen(void)$/;"	f	class:CSerialConnection	signature:(void)
internalOpen	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::internalOpen(void)$/;"	f	class:CSimulateSerial	signature:(void)
isAfter	src/include/CArcTime.h	/^          bool isAfter(CArcTime testTime) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime testTime) const
isAt	src/include/CArcTime.h	/^          bool isAt(CArcTime testTime) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime testTime) const
isBefore	src/include/CArcTime.h	/^          bool isBefore(CArcTime testTime) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime testTime) const
isEmpty	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                bool isEmpty() { return m_length == 0? true: false; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
isEmpty	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                bool isEmpty() { return m_length == 0? true: false; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
isEmpty	src/include/CLidarPacket.h	/^                bool isEmpty() { return m_length == 0? true: false; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
isEnd	src/include/CCountDown.h	/^                bool isEnd() const;$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:() const
isEnd	src/src/CCountDown.cpp	/^bool CCountDown::isEnd() const$/;"	f	class:CCountDown	signature:() const
isFirstScan	src/include/C3iroboticsLidar.h	/^                bool isFirstScan(TToothScan &tooth_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan)
isFirstScan	src/src/C3iroboticsLidar.cpp	/^bool C3iroboticsLidar::isFirstScan(TToothScan &tooth_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan)
isReceiveLidarSpeed	src/include/C3iroboticsLidar.h	/^                bool isReceiveLidarSpeed() {bool flag = m_receive_lidar_speed; m_receive_lidar_speed = false; return flag;}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
isValid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                bool isValid() const { return m_valid; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
isValid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                bool isValid() const { return m_valid; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
isValid	src/include/CLidarPacket.h	/^                bool isValid() const { return m_valid; }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:() const
least_packet_len	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                    u16 least_packet_len;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
least_packet_len	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                    u16 least_packet_len;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
least_packet_len	src/include/CLidarPacket.h	/^                    u16 least_packet_len;$/;"	m	struct:everest::hwdrivers::CLidarPacket::TParams	access:public
lidar_speed	src/include/CLidarUnpacket.h	/^            float                 lidar_speed;      \/\/ unit: lidar speed$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
log	src/include/CArcTime.h	/^          void log(const char *prefix = NULL) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const char *prefix = NULL) const
mSecSince	src/include/CArcTime.h	/^              long mSecSince(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
mSecSince	src/include/CArcTime.h	/^          long mSecSince(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
mSecSinceLL	src/include/CArcTime.h	/^          long long mSecSinceLL(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
mSecSinceLL	src/include/CArcTime.h	/^          long long mSecSinceLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
mSecTo	src/include/CArcTime.h	/^          long mSecTo(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
mSecToLL	src/include/CArcTime.h	/^          long long mSecToLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
m_MSec	src/include/CArcTime.h	/^          unsigned long long m_MSec;$/;"	m	class:everest::hwdrivers::CArcTime	access:protected
m_Sec	src/include/CArcTime.h	/^          unsigned long long m_Sec;$/;"	m	class:everest::hwdrivers::CArcTime	access:protected
m_actual_count	src/include/CLidarPacketReceiver.h	/^                int                 m_actual_count;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_baud_rate	src/include/CSerialConnection.h	/^				int 			m_baud_rate;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
m_baud_rate	src/include/CSimulateSerial.h	/^				int 			m_baud_rate;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
m_buf	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                std::vector<u8>    m_buf;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_buf	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                std::vector<u8>    m_buf;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_buf	src/include/CLidarPacket.h	/^                std::vector<u8>    m_buf;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_count_down	src/include/CLidarPacketReceiver.h	/^                CCountDown          m_count_down;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_counter	src/include/CLidarPacketReceiver.h	/^                size_t              m_counter;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_current_lidar_speed	src/include/C3iroboticsLidar.h	/^                double                  m_current_lidar_speed;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_data_count_down	src/include/C3iroboticsLidar.h	/^                CCountDown              m_data_count_down;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_data_with_signal	src/include/C3iroboticsLidar.h	/^                bool                    m_data_with_signal;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_dc_device_name	src/include/CDeviceConnection.h	/^				std::string 	m_dc_device_name;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
m_dc_port_name	src/include/CDeviceConnection.h	/^				std::string 	m_dc_port_name;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
m_dc_port_type	src/include/CDeviceConnection.h	/^				std::string 	m_dc_port_type;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
m_device_conn	src/include/CLidarPacketReceiver.h	/^                CDeviceConnection 	*m_device_conn;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_device_connect	src/include/C3iroboticsLidar.h	/^                CDeviceConnection       *m_device_connect;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_end_flag	src/include/CCountDown.h	/^                bool                        m_end_flag;$/;"	m	class:everest::hwdrivers::CCountDown	access:private
m_end_time	src/include/CCountDown.h	/^                TTimeStamp                  m_end_time;$/;"	m	class:everest::hwdrivers::CCountDown	access:private
m_fp	src/include/CSimulateSerial.h	/^				std::ifstream   m_fp;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
m_grab_scan_count	src/include/C3iroboticsLidar.h	/^                int                     m_grab_scan_count;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_grab_scan_state	src/include/C3iroboticsLidar.h	/^                TGrabScanState          m_grab_scan_state;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_hardware_control	src/include/CSerialConnection.h	/^				bool 			m_hardware_control;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
m_last_scan_angle	src/include/C3iroboticsLidar.h	/^                float                   m_last_scan_angle;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16                m_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16                m_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_length	src/include/CLidarPacket.h	/^                u16                m_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_lidar_erro	src/include/C3iroboticsLidar.h	/^                TLidarError             m_lidar_erro;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_lidar_scan	src/include/C3iroboticsLidar.h	/^                TLidarScan              m_lidar_scan;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_log_when_receive_time_over	src/include/CLidarPacketReceiver.h	/^                bool                m_log_when_receive_time_over;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_packet	src/include/C3iroboticsLidar.h	/^                CLidarPacket            m_packet;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_packet_length	src/include/CLidarPacketReceiver.h	/^                int                 m_packet_length;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_params	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                TParams            m_params;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_params	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                TParams            m_params;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_params	src/include/C3iroboticsLidar.h	/^                TParams                 m_params;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_params	src/include/CLidarPacket.h	/^                TParams            m_params;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_params	src/include/CLidarPacketReceiver.h	/^                TParams             m_params;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_port	src/include/CSerialConnection.h	/^				int 			m_port;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
m_port_name	src/include/CSerialConnection.h	/^				std::string 	m_port_name;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
m_port_name	src/include/CSimulateSerial.h	/^				std::string 	m_port_name;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
m_read_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                u16                m_read_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_read_length	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                u16                m_read_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_read_length	src/include/CLidarPacket.h	/^                u16                m_read_length;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_receive_lidar_speed	src/include/C3iroboticsLidar.h	/^                bool                    m_receive_lidar_speed;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_receiver	src/include/C3iroboticsLidar.h	/^                CLidarPacketReceiver    m_receiver;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_remainder_flag	src/include/C3iroboticsLidar.h	/^                bool                    m_remainder_flag;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_remainder_tooth_scan	src/include/C3iroboticsLidar.h	/^                TToothScan              m_remainder_tooth_scan;$/;"	m	class:everest::hwdrivers::C3iroboticsLidar	access:private
m_save_fp	src/include/CLidarPacketReceiver.h	/^                std::ofstream       m_save_fp;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_state	src/include/CLidarPacketReceiver.h	/^                TState              m_state;$/;"	m	class:everest::hwdrivers::CLidarPacketReceiver	access:private
m_status	src/include/CSerialConnection.h	/^				int 			m_status;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
m_status	src/include/CSimulateSerial.h	/^				int 			m_status;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
m_str_map	src/include/CDeviceConnection.h	/^				static CStrMap 	m_str_map;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
m_str_map	src/include/CSimulateSerial.h	/^                CStrMap 		m_str_map;$/;"	m	class:everest::hwdrivers::CSimulateSerial	access:protected
m_str_map	src/src/CDeviceConnection.cpp	/^CStrMap CDeviceConnection::m_str_map;$/;"	m	class:CDeviceConnection	file:
m_str_map_inited	src/include/CDeviceConnection.h	/^				static bool 	m_str_map_inited;$/;"	m	class:everest::hwdrivers::CDeviceConnection	access:protected
m_taking_timestamps	src/include/CSerialConnection.h	/^                bool            m_taking_timestamps;$/;"	m	class:everest::hwdrivers::CSerialConnection	access:protected
m_time_ms	src/include/CCountDown.h	/^                double                      m_time_ms;$/;"	m	class:everest::hwdrivers::CCountDown	access:private
m_valid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                bool               m_valid;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_valid	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                bool               m_valid;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
m_valid	src/include/CLidarPacket.h	/^                bool               m_valid;$/;"	m	class:everest::hwdrivers::CLidarPacket	access:public
main	app/node.cpp	/^int main(int argc, char * argv[])$/;"	f	signature:(int argc, char * argv[])
main	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	signature:(int argc, char** argv)
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	signature:(int argc, char** argv)
minute	src/include/CTime.h	/^			uint8_t		minute; \/** Minute (0-59) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
month	src/include/CTime.h	/^			uint8_t		month;  \/** Month (1-12) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
offset_angle	src/include/CLidarUnpacket.h	/^            float                 offset_angle;     \/\/ unit: degree$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
offset_valid	src/include/CLidarUnpacket.h	/^            bool                  offset_valid;$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
open	src/include/CSerialConnection.h	/^				int open(const char * port = NULL);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char * port = NULL)
open	src/include/CSimulateSerial.h	/^				int open(const char * port = NULL);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char * port = NULL)
open	src/src/CSerialConnection.cpp	/^int CSerialConnection::open(const char *port)$/;"	f	class:CSerialConnection	signature:(const char *port)
open	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::open(const char *port)$/;"	f	class:CSimulateSerial	signature:(const char *port)
openSimple	src/include/CDeviceConnection.h	/^			  virtual bool openSimple(void) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(void)
openSimple	src/include/CSerialConnection.h	/^				virtual bool openSimple(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(void)
openSimple	src/include/CSimulateSerial.h	/^				virtual bool openSimple(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(void)
openSimple	src/src/CSerialConnection.cpp	/^bool CSerialConnection::openSimple(void)$/;"	f	class:CSerialConnection	signature:(void)
openSimple	src/src/CSimulateSerial.cpp	/^bool CSimulateSerial::openSimple(void)$/;"	f	class:CSimulateSerial	signature:(void)
operator !=	src/include/CArcTime.h	/^          bool operator!=(const CArcTime& other) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime& other) const
operator <	src/include/CArcTime.h	/^          bool operator<(const CArcTime& other) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime& other) const
operator =	src/include/CArcTime.h	/^              CArcTime &operator=(const CArcTime &other)$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime &other)
operator ==	src/include/CArcTime.h	/^          bool operator==(const CArcTime& other) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(const CArcTime& other) const
os2String	src/include/CLogUtitls.h	/^std::string os2String(const T& t)$/;"	f	signature:(const T& t)
ourMonotonicClock	src/include/CArcTime.h	/^          static bool ourMonotonicClock;$/;"	m	class:everest::hwdrivers::CArcTime	access:protected
packet_max_time_ms	src/include/CLidarPacketReceiver.h	/^                    size_t packet_max_time_ms;$/;"	m	struct:everest::hwdrivers::CLidarPacketReceiver::TParams	access:public
packet_wait_time_ms	src/include/C3iroboticsLidar.h	/^                    size_t packet_wait_time_ms;$/;"	m	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public
packet_wait_time_ms	src/include/CLidarPacketReceiver.h	/^                    size_t packet_wait_time_ms;$/;"	m	struct:everest::hwdrivers::CLidarPacketReceiver::TParams	access:public
printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                void printHex();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                void printHex();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
printHex	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
printHex	src/include/CLidarPacket.h	/^                void printHex();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
printHex	src/src/CLidarPacket.cpp	/^void CLidarPacket::printHex()$/;"	f	class:CLidarPacket	signature:()
processStateAcquireData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateAcquireData(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateAcquireData	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateAcquireData(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateAcquireData	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateAcquireData(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
processStateAcquireData	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateAcquireData(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateHeader1	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader1(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateHeader1	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader1(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateHeader1	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateHeader1(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
processStateHeader1	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader1(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateHeader2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader2(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateHeader2	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader2(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateHeader2	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateHeader2(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
processStateHeader2	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateHeader2(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateLength(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateLength	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateLength(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
processStateLength	src/include/CLidarPacketReceiver.h	/^				TPacketResult processStateLength(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
processStateLength	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::processStateLength(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                void pushBack(u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ch)
pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                void pushBack(u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ch)
pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
pushBack	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
pushBack	src/include/CLidarPacket.h	/^                void pushBack(u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ch)
pushBack	src/src/CLidarPacket.cpp	/^void CLidarPacket::pushBack(u8 ch)$/;"	f	class:CLidarPacket	signature:(u8 ch)
qnxnto	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
rateToBaud	src/include/CSerialConnection.h	/^				int rateToBaud(int rate);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:protected	signature:(int rate)
rateToBaud	src/include/CSimulateSerial.h	/^				int rateToBaud(int rate);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:protected	signature:(int rate)
rateToBaud	src/src/CSerialConnection.cpp	/^int CSerialConnection::rateToBaud(int rate)$/;"	f	class:CSerialConnection	signature:(int rate)
read	src/include/CDeviceConnection.h	/^			  virtual int read(const char *data, unsigned int size,$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(const char *data, unsigned int size, unsigned int ms_wait = 0)
read	src/include/CSerialConnection.h	/^				virtual int read(const char *data, unsigned int size, unsigned int msWait = 0);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char *data, unsigned int size, unsigned int msWait = 0)
read	src/include/CSimulateSerial.h	/^				virtual int read(const char *data, unsigned int size, unsigned int msWait = 0);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char *data, unsigned int size, unsigned int msWait = 0)
read	src/src/CSerialConnection.cpp	/^int CSerialConnection::read(const char *data, unsigned int size, unsigned int msWait)$/;"	f	class:CSerialConnection	signature:(const char *data, unsigned int size, unsigned int msWait)
read	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::read(const char *data, unsigned int size, unsigned int msWait)$/;"	f	class:CSimulateSerial	signature:(const char *data, unsigned int size, unsigned int msWait)
readPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::readPacket(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
readPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::readPacket(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
readPacket	src/include/CLidarPacketReceiver.h	/^				TPacketResult readPacket(CLidarPacket *packet, u8 ch);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:(CLidarPacket *packet, u8 ch)
readPacket	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::TPacketResult CLidarPacketReceiver::readPacket(CLidarPacket *packet, u8 ch)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet, u8 ch)
receivePacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^bool CLidarPacketReceiver::receivePacket(CLidarPacket *packet)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet)
receivePacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^bool CLidarPacketReceiver::receivePacket(CLidarPacket *packet)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet)
receivePacket	src/include/CLidarPacketReceiver.h	/^                bool receivePacket(CLidarPacket *packet);$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(CLidarPacket *packet)
receivePacket	src/src/CLidarPacketReceiver.cpp	/^bool CLidarPacketReceiver::receivePacket(CLidarPacket *packet)$/;"	f	class:CLidarPacketReceiver	signature:(CLidarPacket *packet)
renameFile	src/include/CLogUtitls.h	/^static bool renameFile( const std::string &oldFileName, const std::string &newFileName)$/;"	f	signature:( const std::string &oldFileName, const std::string &newFileName)
renameFileExtension	src/include/CLogUtitls.h	/^static std::string renameFileExtension(std::string &file_path, std::string new_extension)$/;"	f	signature:(std::string &file_path, std::string new_extension)
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^void CLidarPacketReceiver::reset()$/;"	f	class:CLidarPacketReceiver	signature:()
reset	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^void CLidarPacketReceiver::reset()$/;"	f	class:CLidarPacketReceiver	signature:()
reset	src/include/CLidarPacket.h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
reset	src/include/CLidarPacketReceiver.h	/^                void reset();$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:private	signature:()
reset	src/src/CLidarPacket.cpp	/^void CLidarPacket::reset()$/;"	f	class:CLidarPacket	signature:()
reset	src/src/CLidarPacketReceiver.cpp	/^void CLidarPacketReceiver::reset()$/;"	f	class:CLidarPacketReceiver	signature:()
resetScanGrab	src/include/C3iroboticsLidar.h	/^                void resetScanGrab();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:()
resetScanGrab	src/src/C3iroboticsLidar.cpp	/^void C3iroboticsLidar::resetScanGrab()$/;"	f	class:C3iroboticsLidar	signature:()
s16	src/include/typedef.h	/^typedef int16_t             s16;$/;"	t
s32	src/include/typedef.h	/^typedef int32_t             s32;$/;"	t
s64	src/include/typedef.h	/^typedef int64_t             s64;$/;"	t
s8	src/include/typedef.h	/^typedef int8_t              s8;$/;"	t
scan_time_out_ms	src/include/C3iroboticsLidar.h	/^                    size_t scan_time_out_ms;$/;"	m	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public
secSince	src/include/CArcTime.h	/^          long secSince(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
secSince	src/include/CArcTime.h	/^          long secSince(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
secSinceLL	src/include/CArcTime.h	/^          long long secSinceLL(CArcTime since) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(CArcTime since) const
secSinceLL	src/include/CArcTime.h	/^          long long secSinceLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
secTo	src/include/CArcTime.h	/^          long secTo(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
secToLL	src/include/CArcTime.h	/^          long long secToLL(void) const$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(void) const
second	src/include/CTime.h	/^			double		second; \/** Seconds (0.0000-59.9999) *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
setBaud	src/include/CSerialConnection.h	/^				bool setBaud(int baud);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(int baud)
setBaud	src/include/CSimulateSerial.h	/^				bool setBaud(int baud);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(int baud)
setBaud	src/src/CSerialConnection.cpp	/^bool CSerialConnection::setBaud(int rate)$/;"	f	class:CSerialConnection	signature:(int rate)
setBaud	src/src/CSimulateSerial.cpp	/^bool CSimulateSerial::setBaud(int rate)$/;"	f	class:CSimulateSerial	signature:(int rate)
setDataWithSignal	src/include/C3iroboticsLidar.h	/^                void setDataWithSignal(bool data_with_signal) {m_data_with_signal = data_with_signal;}$/;"	f	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:(bool data_with_signal)
setDeviceConnection	src/include/CLidarPacketReceiver.h	/^				void setDeviceConnection(CDeviceConnection *device_connection) { m_device_conn = device_connection; }$/;"	f	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:(CDeviceConnection *device_connection)
setDeviceName	src/include/CDeviceConnection.h	/^			  void setDeviceName(const char *device_name);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(const char *device_name)
setDeviceName	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::setDeviceName(const char *device_name)$/;"	f	class:CDeviceConnection	signature:(const char *device_name)
setHardwareControl	src/include/CSerialConnection.h	/^				bool setHardwareControl(bool hardwareControl);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(bool hardwareControl)
setHardwareControl	src/src/CSerialConnection.cpp	/^bool CSerialConnection::setHardwareControl(bool hardwareControl)$/;"	f	class:CSerialConnection	signature:(bool hardwareControl)
setMSec	src/include/CArcTime.h	/^          void setMSec(unsigned long msec) { m_MSec = msec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long msec)
setMSecLL	src/include/CArcTime.h	/^          void setMSecLL(unsigned long long msec) { m_MSec = msec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long long msec)
setPort	src/include/CSerialConnection.h	/^				void setPort(const char *port = NULL);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char *port = NULL)
setPort	src/include/CSimulateSerial.h	/^				void setPort(const char *port = NULL);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char *port = NULL)
setPort	src/src/CSerialConnection.cpp	/^void CSerialConnection::setPort(const char *port)$/;"	f	class:CSerialConnection	signature:(const char *port)
setPort	src/src/CSimulateSerial.cpp	/^void CSimulateSerial::setPort(const char *port)$/;"	f	class:CSimulateSerial	signature:(const char *port)
setPortName	src/include/CDeviceConnection.h	/^				void setPortName(const char *port_name);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:protected	signature:(const char *port_name)
setPortName	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::setPortName(const char *portName)$/;"	f	class:CDeviceConnection	signature:(const char *portName)
setPortType	src/include/CDeviceConnection.h	/^				void setPortType(const char *port_type);$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:protected	signature:(const char *port_type)
setPortType	src/src/CDeviceConnection.cpp	/^void CDeviceConnection::setPortType(const char *portType)$/;"	f	class:CDeviceConnection	signature:(const char *portType)
setSec	src/include/CArcTime.h	/^          void setSec(unsigned long sec) { m_Sec = sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long sec)
setSecLL	src/include/CArcTime.h	/^          void setSecLL(unsigned long long sec) { m_Sec = sec; }$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:(unsigned long long sec)
setTime	src/include/CCountDown.h	/^                void setTime(double time_ms);$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:(double time_ms)
setTime	src/src/CCountDown.cpp	/^void CCountDown::setTime(double time_ms)$/;"	f	class:CCountDown	signature:(double time_ms)
setToNow	src/include/CArcTime.h	/^          void setToNow(void);$/;"	p	class:everest::hwdrivers::CArcTime	access:public	signature:(void)
setToNow	src/src/CArcTime.cpp	/^void CArcTime::setToNow(void)$/;"	f	class:CArcTime	signature:(void)
set_opt	src/include/CSerialConnection.h	/^				int set_opt(int fd,int nSpeed, int nBits, char nEvent, int nStop);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(int fd,int nSpeed, int nBits, char nEvent, int nStop)
set_opt	src/src/CSerialConnection.cpp	/^int CSerialConnection::set_opt(int fd,int nSpeed, int nBits, char nEvent, int nStop)$/;"	f	class:CSerialConnection	signature:(int fd,int nSpeed, int nBits, char nEvent, int nStop)
signal	app/node.cpp	/^    uint8_t signal;$/;"	m	struct:_rslidar_data	file:	access:public
signal	src/include/C3iroboticsLidar.h	/^	        std::vector<int>   signal;$/;"	m	struct:everest::hwdrivers::TLidarScan	access:public
signal	src/include/CLidarUnpacket.h	/^            std::vector<int>      signal;           \/\/ range: 0 - 255$/;"	m	struct:everest::hwdrivers::TToothScan	access:public
startTimeStamping	src/include/CSerialConnection.h	/^				void startTimeStamping(void);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:protected	signature:(void)
startTimeStamping	src/include/CSimulateSerial.h	/^				void startTimeStamping(void);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:protected	signature:(void)
startTimeStamping	src/src/CSerialConnection.cpp	/^void CSerialConnection::startTimeStamping(void)$/;"	f	class:CSerialConnection	signature:(void)
timeDifference	src/include/CTime.h	/^                static double timeDifference( const TTimeStamp &t1, const TTimeStamp &t2 );$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:( const TTimeStamp &t1, const TTimeStamp &t2 )
timeDifference	src/src/CTime.cpp	/^double CTime::timeDifference( const TTimeStamp &t1, const TTimeStamp &t2 )$/;"	f	class:CTime	signature:( const TTimeStamp &t1, const TTimeStamp &t2 )
timeToString	src/include/CTime.h	/^                static std::string timeToString(TTimeStamp &time);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:(TTimeStamp &time)
time_tToTimestamp	src/include/CTime.h	/^                static TTimeStamp time_tToTimestamp(const time_t &t);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:(const time_t &t)
time_tToTimestamp	src/src/CTime.cpp	/^TTimeStamp CTime::time_tToTimestamp(const time_t &t)$/;"	f	class:CTime	signature:(const time_t &t)
timestampToParts	src/include/CTime.h	/^                static void timestampToParts( TTimeStamp t, TTimeParts &p , bool localTime);$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:( TTimeStamp t, TTimeParts &p , bool localTime)
timestampToParts	src/src/CTime.cpp	/^void CTime::timestampToParts( TTimeStamp t, TTimeParts &p , bool localTime)$/;"	f	class:CTime	signature:( TTimeStamp t, TTimeParts &p , bool localTime)
timestampTotime_t	src/include/CTime.h	/^                static double timestampTotime_t( const TTimeStamp  &t );$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:( const TTimeStamp &t )
timestampTotime_t	src/src/CTime.cpp	/^double CTime::timestampTotime_t( const TTimeStamp  &t )$/;"	f	class:CTime	signature:( const TTimeStamp &t )
toothScan2LidarScan	src/include/C3iroboticsLidar.h	/^                void toothScan2LidarScan(TToothScan &tooth_scan, TLidarScan &lidar_scan);$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:private	signature:(TToothScan &tooth_scan, TLidarScan &lidar_scan)
toothScan2LidarScan	src/src/C3iroboticsLidar.cpp	/^void C3iroboticsLidar::toothScan2LidarScan(TToothScan &tooth_scan, TLidarScan &lidar_scan)$/;"	f	class:C3iroboticsLidar	signature:(TToothScan &tooth_scan, TLidarScan &lidar_scan)
tooth_number	src/include/C3iroboticsLidar.h	/^                    int tooth_number;$/;"	m	struct:everest::hwdrivers::C3iroboticsLidar::TParams	access:public
u16	src/include/typedef.h	/^typedef uint16_t            u16;$/;"	t
u32	src/include/typedef.h	/^typedef uint32_t            u32;$/;"	t
u64	src/include/typedef.h	/^typedef uint64_t            u64;$/;"	t
u8	src/include/typedef.h	/^typedef uint8_t             u8;$/;"	t
unpacketHealthInfo	src/include/CLidarUnpacket.h	/^                static TLidarError unpacketHealthInfo(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
unpacketHealthInfo	src/src/CLidarUnpacket.cpp	/^TLidarError CLidarUnpacket::unpacketHealthInfo(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
unpacketLidarScan	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketLidarScan(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
unpacketLidarScan	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketLidarScan(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
unpacketLidarScan2	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketLidarScan2(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
unpacketLidarScan2	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketLidarScan2(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
unpacketLidarSpeed	src/include/CLidarUnpacket.h	/^                static int unpacketLidarSpeed(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
unpacketLidarSpeed	src/src/CLidarUnpacket.cpp	/^int CLidarUnpacket::unpacketLidarSpeed(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
unpacketNewLidarScanHasSingal	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketNewLidarScanHasSingal(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
unpacketNewLidarScanHasSingal	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketNewLidarScanHasSingal(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
unpacketNewLidarScanNoSingal	src/include/CLidarUnpacket.h	/^                static TToothScan unpacketNewLidarScanNoSingal(CLidarPacket &packet);$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:(CLidarPacket &packet)
unpacketNewLidarScanNoSingal	src/src/CLidarUnpacket.cpp	/^TToothScan CLidarUnpacket::unpacketNewLidarScanNoSingal(CLidarPacket &packet)$/;"	f	class:CLidarUnpacket	signature:(CLidarPacket &packet)
usingMonotonicClock	src/include/CArcTime.h	/^          static bool usingMonotonicClock()$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:()
verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^				bool verifyCheckSum(u8 ProtoType);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ProtoType)
verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1778).cpp	/^bool CLidarPacket::verifyCheckSum()$/;"	f	class:CLidarPacket	signature:()
verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^				bool verifyCheckSum();$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(526).cpp	/^bool CLidarPacket::verifyCheckSum(u8 ProtoType)$/;"	f	class:CLidarPacket	signature:(u8 ProtoType)
verifyCheckSum	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(5681).cpp	/^bool CLidarPacket::verifyCheckSum(u8 ProtoType)$/;"	f	class:CLidarPacket	signature:(u8 ProtoType)
verifyCheckSum	src/include/CLidarPacket.h	/^				bool verifyCheckSum(u8 ProtoType);$/;"	p	class:everest::hwdrivers::CLidarPacket	access:public	signature:(u8 ProtoType)
verifyCheckSum	src/src/CLidarPacket.cpp	/^bool CLidarPacket::verifyCheckSum(u8 ProtoType)$/;"	f	class:CLidarPacket	signature:(u8 ProtoType)
volatile	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
write	src/include/CDeviceConnection.h	/^			  virtual int write(const char *data, unsigned int size) = 0;$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:(const char *data, unsigned int size)
write	src/include/CSerialConnection.h	/^				virtual int write(const char *data, unsigned int size);$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:(const char *data, unsigned int size)
write	src/include/CSimulateSerial.h	/^				virtual int write(const char *data, unsigned int size);$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:(const char *data, unsigned int size)
write	src/src/CSerialConnection.cpp	/^int CSerialConnection::write(const char *data, unsigned int size)$/;"	f	class:CSerialConnection	signature:(const char *data, unsigned int size)
write	src/src/CSimulateSerial.cpp	/^int CSimulateSerial::write(const char *data, unsigned int size)$/;"	f	class:CSimulateSerial	signature:(const char *data, unsigned int size)
year	src/include/CTime.h	/^			uint16_t	year;	\/** The year *\/$/;"	m	struct:everest::hwdrivers::TTimeParts	access:public
~C3iroboticsLidar	src/include/C3iroboticsLidar.h	/^                ~C3iroboticsLidar();$/;"	p	class:everest::hwdrivers::C3iroboticsLidar	access:public	signature:()
~C3iroboticsLidar	src/src/C3iroboticsLidar.cpp	/^C3iroboticsLidar::~C3iroboticsLidar()$/;"	f	class:C3iroboticsLidar	signature:()
~CArcTime	src/include/CArcTime.h	/^              ~CArcTime() {}$/;"	f	class:everest::hwdrivers::CArcTime	access:public	signature:()
~CCountDown	src/include/CCountDown.h	/^                ~CCountDown();$/;"	p	class:everest::hwdrivers::CCountDown	access:public	signature:()
~CCountDown	src/src/CCountDown.cpp	/^CCountDown::~CCountDown()$/;"	f	class:CCountDown	signature:()
~CDeviceConnection	src/include/CDeviceConnection.h	/^			  virtual ~CDeviceConnection();$/;"	p	class:everest::hwdrivers::CDeviceConnection	access:public	signature:()
~CDeviceConnection	src/src/CDeviceConnection.cpp	/^CDeviceConnection::~CDeviceConnection()$/;"	f	class:CDeviceConnection	signature:()
~CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(1469).h	/^                ~CLidarPacket() { }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
~CLidarPacket	SI/Lidar_II_Linux.si4project/Backup/CLidarPacket(3441).h	/^                ~CLidarPacket() { }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
~CLidarPacket	src/include/CLidarPacket.h	/^                ~CLidarPacket() { }$/;"	f	class:everest::hwdrivers::CLidarPacket	access:public	signature:()
~CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(158).cpp	/^CLidarPacketReceiver::~CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
~CLidarPacketReceiver	SI/Lidar_II_Linux.si4project/Backup/CLidarPacketReceiver(5000).cpp	/^CLidarPacketReceiver::~CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
~CLidarPacketReceiver	src/include/CLidarPacketReceiver.h	/^                ~CLidarPacketReceiver();$/;"	p	class:everest::hwdrivers::CLidarPacketReceiver	access:public	signature:()
~CLidarPacketReceiver	src/src/CLidarPacketReceiver.cpp	/^CLidarPacketReceiver::~CLidarPacketReceiver()$/;"	f	class:CLidarPacketReceiver	signature:()
~CLidarUnpacket	src/include/CLidarUnpacket.h	/^                ~CLidarUnpacket();$/;"	p	class:everest::hwdrivers::CLidarUnpacket	access:public	signature:()
~CLidarUnpacket	src/src/CLidarUnpacket.cpp	/^CLidarUnpacket::~CLidarUnpacket()$/;"	f	class:CLidarUnpacket	signature:()
~CSerialConnection	src/include/CSerialConnection.h	/^				virtual ~CSerialConnection();$/;"	p	class:everest::hwdrivers::CSerialConnection	access:public	signature:()
~CSerialConnection	src/src/CSerialConnection.cpp	/^CSerialConnection::~CSerialConnection()$/;"	f	class:CSerialConnection	signature:()
~CSimulateSerial	src/include/CSimulateSerial.h	/^				virtual ~CSimulateSerial();$/;"	p	class:everest::hwdrivers::CSimulateSerial	access:public	signature:()
~CSimulateSerial	src/src/CSimulateSerial.cpp	/^CSimulateSerial::~CSimulateSerial()$/;"	f	class:CSimulateSerial	signature:()
~CTime	src/include/CTime.h	/^                ~CTime();$/;"	p	class:everest::hwdrivers::CTime	access:public	signature:()
~CTime	src/src/CTime.cpp	/^CTime::~CTime()$/;"	f	class:CTime	signature:()
